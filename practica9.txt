Hive (C:\Users\Humberto\Desktop\2NTUSER.DAT) is not dirty.

adobe v.20200522
(NTUSER.DAT) Gets user's Adobe app cRecentFiles values

Could not access Software\Adobe\Adobe Acrobat\\AVGeneral\cRecentFiles

Could not access Software\Adobe\Acrobat Reader\\AVGeneral\cRecentFiles

----------------------------------------
allowedenum v.20200511
(NTUSER.DAT, Software) Extracts AllowedEnumeration values to determine hidden special folders

Software\Microsoft\Windows\CurrentVersion\Explorer\AllowedEnumeration not found.
Microsoft\Windows\CurrentVersion\Explorer\AllowedEnumeration not found.
----------------------------------------
appassoc v.20200515
- Gets contents of user's ApplicationAssociationToasts key

LastWrite: 2021-04-05 09:27:27Z

AppX6eg8h5sxqq90pv53845wmnbewywdqq5h_.3g2
AppXk0g4vb8gvt7b93tg50ybcy892pge6jmt_.3g2
AppXmk63adfvvewttqzmezsgagxtcyyr84tx_.3g2
AppX6eg8h5sxqq90pv53845wmnbewywdqq5h_.3gp
AppXk0g4vb8gvt7b93tg50ybcy892pge6jmt_.3gp
AppXmk63adfvvewttqzmezsgagxtcyyr84tx_.3gp
AppXk0g4vb8gvt7b93tg50ybcy892pge6jmt_.3gp2
AppX6eg8h5sxqq90pv53845wmnbewywdqq5h_.3gpp
AppXk0g4vb8gvt7b93tg50ybcy892pge6jmt_.3gpp
AppXmk63adfvvewttqzmezsgagxtcyyr84tx_.3gpp
AppXmgw6pxxs62rbgfp9petmdyb4fx7rnd4k_.3mf
AppXcdh38jxzbcberv50vxg2tg4k84kfnewn_.3mf
AppXr0rz9yckydawgnrx5df1t9s57ne60yhn_.3mf
AppXvhc4p7vz4b485xfp46hhk3fq3grkdgjg_.3mf
AppX9v2an58zgtq78h18jgmp43b5gza6b2jp_.aac
AppXqj98qxeaynz6dv4459ayz6bnqxbyaqcs_.aac
AppXqj98qxeaynz6dv4459ayz6bnqxbyaqcs_.ac3
AppX9v2an58zgtq78h18jgmp43b5gza6b2jp_.adt
AppXqj98qxeaynz6dv4459ayz6bnqxbyaqcs_.adt
AppX9v2an58zgtq78h18jgmp43b5gza6b2jp_.adts
AppXqj98qxeaynz6dv4459ayz6bnqxbyaqcs_.adts
AppXqj98qxeaynz6dv4459ayz6bnqxbyaqcs_.amr
AppX9rkaq77s0jzh1tyccadx9ghba15r6t3h_.arw
WMP11.AssocFile.ASF_.asf
AppXk0g4vb8gvt7b93tg50ybcy892pge6jmt_.asf
AppX6eg8h5sxqq90pv53845wmnbewywdqq5h_.avi
AppXk0g4vb8gvt7b93tg50ybcy892pge6jmt_.avi
AppXmk63adfvvewttqzmezsgagxtcyyr84tx_.avi
AppXcdh38jxzbcberv50vxg2tg4k84kfnewn_.bmp
AppX9rkaq77s0jzh1tyccadx9ghba15r6t3h_.cr2
AppX9rkaq77s0jzh1tyccadx9ghba15r6t3h_.crw
AppXcdh38jxzbcberv50vxg2tg4k84kfnewn_.dib
AppXmk63adfvvewttqzmezsgagxtcyyr84tx_.divx
docxfile_.docx
AppXqj98qxeaynz6dv4459ayz6bnqxbyaqcs_.ec3
AppXvepbp3z66accmsd0x877zbbxjctkpr6t_.epub
AppX9rkaq77s0jzh1tyccadx9ghba15r6t3h_.erf
AppXmgw6pxxs62rbgfp9petmdyb4fx7rnd4k_.fbx
AppXcdh38jxzbcberv50vxg2tg4k84kfnewn_.fbx
AppXr0rz9yckydawgnrx5df1t9s57ne60yhn_.fbx
AppXvhc4p7vz4b485xfp46hhk3fq3grkdgjg_.fbx
AppX9v2an58zgtq78h18jgmp43b5gza6b2jp_.flac
AppXqj98qxeaynz6dv4459ayz6bnqxbyaqcs_.flac
AppXcdh38jxzbcberv50vxg2tg4k84kfnewn_.gif
AppXmgw6pxxs62rbgfp9petmdyb4fx7rnd4k_.glb
AppXcdh38jxzbcberv50vxg2tg4k84kfnewn_.glb
AppXr0rz9yckydawgnrx5df1t9s57ne60yhn_.glb
AppXvhc4p7vz4b485xfp46hhk3fq3grkdgjg_.glb
AppXmgw6pxxs62rbgfp9petmdyb4fx7rnd4k_.gltf
AppXcdh38jxzbcberv50vxg2tg4k84kfnewn_.gltf
AppXr0rz9yckydawgnrx5df1t9s57ne60yhn_.gltf
AppXvhc4p7vz4b485xfp46hhk3fq3grkdgjg_.gltf
AppX4hxtad77fbk3jkkeerkrm0ze94wjf3s9_.htm
AppX4hxtad77fbk3jkkeerkrm0ze94wjf3s9_.html
icofile_.ico
PBrush_.ico
AppXcdh38jxzbcberv50vxg2tg4k84kfnewn_.ico
AppXzwr976v2e060wada4gabrk1x69h2dbwy_.inf
AppXhk4des8gf2xat3wtyzc5q06ny78jhkqx_.ini
AppXcdh38jxzbcberv50vxg2tg4k84kfnewn_.jfif
AppXcdh38jxzbcberv50vxg2tg4k84kfnewn_.jpe
AppXcdh38jxzbcberv50vxg2tg4k84kfnewn_.jpeg
AppXcdh38jxzbcberv50vxg2tg4k84kfnewn_.jpg
AppXfeqk92xmhxtyxytgbhn7tdqk70syjc6v_.jpg
AppX9rkaq77s0jzh1tyccadx9ghba15r6t3h_.kdc
AppX4ztfk9wxr86nxmzzq47px0nh0e58b8fw_.log
WMP11.AssocFile.M2TS_.m2t
AppX6eg8h5sxqq90pv53845wmnbewywdqq5h_.m2t
AppXk0g4vb8gvt7b93tg50ybcy892pge6jmt_.m2t
AppXmk63adfvvewttqzmezsgagxtcyyr84tx_.m2t
WMP11.AssocFile.M2TS_.m2ts
AppX6eg8h5sxqq90pv53845wmnbewywdqq5h_.m2ts
AppXk0g4vb8gvt7b93tg50ybcy892pge6jmt_.m2ts
AppXmk63adfvvewttqzmezsgagxtcyyr84tx_.m2ts
WMP11.AssocFile.m3u_.m3u
AppX9v2an58zgtq78h18jgmp43b5gza6b2jp_.m3u
AppXqj98qxeaynz6dv4459ayz6bnqxbyaqcs_.m3u
AppX5sy1gww9q4g2gt941cdxxd7s07xe5vph_.m4a
AppX9v2an58zgtq78h18jgmp43b5gza6b2jp_.m4a
AppXqj98qxeaynz6dv4459ayz6bnqxbyaqcs_.m4a
AppXqj98qxeaynz6dv4459ayz6bnqxbyaqcs_.m4r
AppX6eg8h5sxqq90pv53845wmnbewywdqq5h_.m4v
AppXk0g4vb8gvt7b93tg50ybcy892pge6jmt_.m4v
AppXmk63adfvvewttqzmezsgagxtcyyr84tx_.m4v
AppXqj98qxeaynz6dv4459ayz6bnqxbyaqcs_.mka
WMP11.AssocFile.MKV_.mkv
AppX6eg8h5sxqq90pv53845wmnbewywdqq5h_.mkv
AppXk0g4vb8gvt7b93tg50ybcy892pge6jmt_.mkv
AppXmk63adfvvewttqzmezsgagxtcyyr84tx_.mkv
WMP11.AssocFile.MPEG_.mod
AppX6eg8h5sxqq90pv53845wmnbewywdqq5h_.mod
AppXmk63adfvvewttqzmezsgagxtcyyr84tx_.mod
AppX6eg8h5sxqq90pv53845wmnbewywdqq5h_.mov
AppXk0g4vb8gvt7b93tg50ybcy892pge6jmt_.mov
AppXmk63adfvvewttqzmezsgagxtcyyr84tx_.mov
AppXmk63adfvvewttqzmezsgagxtcyyr84tx_.mp2
AppX9v2an58zgtq78h18jgmp43b5gza6b2jp_.mp3
AppXqj98qxeaynz6dv4459ayz6bnqxbyaqcs_.mp3
AppX6eg8h5sxqq90pv53845wmnbewywdqq5h_.mp4
AppXk0g4vb8gvt7b93tg50ybcy892pge6jmt_.mp4
AppXmk63adfvvewttqzmezsgagxtcyyr84tx_.mp4
AppX6eg8h5sxqq90pv53845wmnbewywdqq5h_.mp4v
AppXk0g4vb8gvt7b93tg50ybcy892pge6jmt_.mp4v
AppXmk63adfvvewttqzmezsgagxtcyyr84tx_.mp4v
AppX9v2an58zgtq78h18jgmp43b5gza6b2jp_.mpa
AppXqj98qxeaynz6dv4459ayz6bnqxbyaqcs_.mpa
AppX6eg8h5sxqq90pv53845wmnbewywdqq5h_.mpe
AppXmk63adfvvewttqzmezsgagxtcyyr84tx_.mpe
AppX6eg8h5sxqq90pv53845wmnbewywdqq5h_.mpeg
AppXmk63adfvvewttqzmezsgagxtcyyr84tx_.mpeg
AppX6eg8h5sxqq90pv53845wmnbewywdqq5h_.mpg
AppXmk63adfvvewttqzmezsgagxtcyyr84tx_.mpg
WMP11.AssocFile.MPEG_.mpv2
AppX6eg8h5sxqq90pv53845wmnbewywdqq5h_.mpv2
AppXmk63adfvvewttqzmezsgagxtcyyr84tx_.mpv2
AppX9rkaq77s0jzh1tyccadx9ghba15r6t3h_.mrw
AppX6eg8h5sxqq90pv53845wmnbewywdqq5h_.mts
AppXk0g4vb8gvt7b93tg50ybcy892pge6jmt_.mts
AppXmk63adfvvewttqzmezsgagxtcyyr84tx_.mts
AppX9rkaq77s0jzh1tyccadx9ghba15r6t3h_.nef
AppX9rkaq77s0jzh1tyccadx9ghba15r6t3h_.nrw
AppXmgw6pxxs62rbgfp9petmdyb4fx7rnd4k_.obj
AppXcdh38jxzbcberv50vxg2tg4k84kfnewn_.obj
AppXr0rz9yckydawgnrx5df1t9s57ne60yhn_.obj
AppXvhc4p7vz4b485xfp46hhk3fq3grkdgjg_.obj
AppXd7df65yysmdaz9xc1vjxts4ng22x2n5f_.obj
odtfile_.odt
AppXqj98qxeaynz6dv4459ayz6bnqxbyaqcs_.oga
AppXqj98qxeaynz6dv4459ayz6bnqxbyaqcs_.ogg
AppX6eg8h5sxqq90pv53845wmnbewywdqq5h_.ogm
AppX6eg8h5sxqq90pv53845wmnbewywdqq5h_.ogv
AppX6eg8h5sxqq90pv53845wmnbewywdqq5h_.ogx
AppXqj98qxeaynz6dv4459ayz6bnqxbyaqcs_.opus
AppX9rkaq77s0jzh1tyccadx9ghba15r6t3h_.orf
AppXd4nrz8ff68srnhf9t5a8sbjyar1cr723_.pdf
AppX9rkaq77s0jzh1tyccadx9ghba15r6t3h_.pef
AppXmgw6pxxs62rbgfp9petmdyb4fx7rnd4k_.ply
AppXcdh38jxzbcberv50vxg2tg4k84kfnewn_.ply
AppXr0rz9yckydawgnrx5df1t9s57ne60yhn_.ply
AppXvhc4p7vz4b485xfp46hhk3fq3grkdgjg_.ply
AppXcdh38jxzbcberv50vxg2tg4k84kfnewn_.png
AppXxf01pj590w7z9mxmyv3nx0a9ewj3e51g_.ps1
AppXc9vj55m1n3559gcjff0scsqeket80zp7_.psd1
AppX1b0e9ytcwx0wcmvkdey0h6af04t1ta3z_.psm1
AppX9rkaq77s0jzh1tyccadx9ghba15r6t3h_.raf
AppX9rkaq77s0jzh1tyccadx9ghba15r6t3h_.raw
rtffile_.rtf
AppX9rkaq77s0jzh1tyccadx9ghba15r6t3h_.rw2
AppX9rkaq77s0jzh1tyccadx9ghba15r6t3h_.rwl
AppX4ztfk9wxr86nxmzzq47px0nh0e58b8fw_.scp
AppX9rkaq77s0jzh1tyccadx9ghba15r6t3h_.sr2
AppX9rkaq77s0jzh1tyccadx9ghba15r6t3h_.srw
AppXmgw6pxxs62rbgfp9petmdyb4fx7rnd4k_.stl
AppXcdh38jxzbcberv50vxg2tg4k84kfnewn_.stl
AppXr0rz9yckydawgnrx5df1t9s57ne60yhn_.stl
AppXvhc4p7vz4b485xfp46hhk3fq3grkdgjg_.stl
AppXde74bfzw9j31bzhcvsrxsyjnhhbq66cs_.svg
AppX43hnxtbyyps62jhe9sqpdzxn1790zetc_.tif
AppX86746z2101ayy2ygv3g96e4eqdf8r99j_.tif
AppXcdh38jxzbcberv50vxg2tg4k84kfnewn_.tif
AppX43hnxtbyyps62jhe9sqpdzxn1790zetc_.tiff
AppX86746z2101ayy2ygv3g96e4eqdf8r99j_.tiff
AppXcdh38jxzbcberv50vxg2tg4k84kfnewn_.tiff
AppX6eg8h5sxqq90pv53845wmnbewywdqq5h_.tod
AppXmk63adfvvewttqzmezsgagxtcyyr84tx_.tod
AppX6eg8h5sxqq90pv53845wmnbewywdqq5h_.ts
AppXmk63adfvvewttqzmezsgagxtcyyr84tx_.ts
AppX6eg8h5sxqq90pv53845wmnbewywdqq5h_.tts
AppXmk63adfvvewttqzmezsgagxtcyyr84tx_.tts
AppX4ztfk9wxr86nxmzzq47px0nh0e58b8fw_.txt
vcard_wab_auto_file_.vcf
AppX9v2an58zgtq78h18jgmp43b5gza6b2jp_.wav
AppXqj98qxeaynz6dv4459ayz6bnqxbyaqcs_.wav
AppX6eg8h5sxqq90pv53845wmnbewywdqq5h_.webm
AppX6eg8h5sxqq90pv53845wmnbewywdqq5h_.wm
AppXk0g4vb8gvt7b93tg50ybcy892pge6jmt_.wm
AppXmk63adfvvewttqzmezsgagxtcyyr84tx_.wm
AppX9v2an58zgtq78h18jgmp43b5gza6b2jp_.wma
AppXqj98qxeaynz6dv4459ayz6bnqxbyaqcs_.wma
AppX6eg8h5sxqq90pv53845wmnbewywdqq5h_.wmv
AppXk0g4vb8gvt7b93tg50ybcy892pge6jmt_.wmv
AppXmk63adfvvewttqzmezsgagxtcyyr84tx_.wmv
AppX9v2an58zgtq78h18jgmp43b5gza6b2jp_.wpl
AppXqj98qxeaynz6dv4459ayz6bnqxbyaqcs_.wpl
AppX4ztfk9wxr86nxmzzq47px0nh0e58b8fw_.wtx
AppXcc58vyzkbjbs4ky0mxrmxf8278rk9b3t_.xml
AppX6eg8h5sxqq90pv53845wmnbewywdqq5h_.xvid
AppXmk63adfvvewttqzmezsgagxtcyyr84tx_.xvid
AppXqj98qxeaynz6dv4459ayz6bnqxbyaqcs_.zpl
AppX9v2an58zgtq78h18jgmp43b5gza6b2jp_.zpl
AppXtggqqtcfspt6ks3fjzyfppwc05yxwtwy_mswindowsmusic
AppX6w6n4f8xch1s3vzwf3af6bfe88qhxbza_mswindowsvideo
AppX2jm25qtmp2qxstv333wv5mne3k5bf4bm_.bmp
AppX2jm25qtmp2qxstv333wv5mne3k5bf4bm_.dib
AppX2jm25qtmp2qxstv333wv5mne3k5bf4bm_.gif
AppX2jm25qtmp2qxstv333wv5mne3k5bf4bm_.ico
AppX2jm25qtmp2qxstv333wv5mne3k5bf4bm_.jfif
AppX2jm25qtmp2qxstv333wv5mne3k5bf4bm_.jpe
AppX2jm25qtmp2qxstv333wv5mne3k5bf4bm_.jpeg
AppX2jm25qtmp2qxstv333wv5mne3k5bf4bm_.jpg
AppX2jm25qtmp2qxstv333wv5mne3k5bf4bm_.png
AppX2jm25qtmp2qxstv333wv5mne3k5bf4bm_.tiff
AppX2jm25qtmp2qxstv333wv5mne3k5bf4bm_.tif
AppX2jm25qtmp2qxstv333wv5mne3k5bf4bm_.arw
AppX2jm25qtmp2qxstv333wv5mne3k5bf4bm_.cr2
AppX2jm25qtmp2qxstv333wv5mne3k5bf4bm_.crw
AppX2jm25qtmp2qxstv333wv5mne3k5bf4bm_.erf
AppX2jm25qtmp2qxstv333wv5mne3k5bf4bm_.kdc
AppX2jm25qtmp2qxstv333wv5mne3k5bf4bm_.mrw
AppX2jm25qtmp2qxstv333wv5mne3k5bf4bm_.nef
AppX2jm25qtmp2qxstv333wv5mne3k5bf4bm_.nrw
AppX2jm25qtmp2qxstv333wv5mne3k5bf4bm_.orf
AppX2jm25qtmp2qxstv333wv5mne3k5bf4bm_.pef
AppX2jm25qtmp2qxstv333wv5mne3k5bf4bm_.raw
AppX2jm25qtmp2qxstv333wv5mne3k5bf4bm_.rw2
AppX2jm25qtmp2qxstv333wv5mne3k5bf4bm_.rwl
AppX2jm25qtmp2qxstv333wv5mne3k5bf4bm_.sr2
AppX2jm25qtmp2qxstv333wv5mne3k5bf4bm_.srw
AppX2jm25qtmp2qxstv333wv5mne3k5bf4bm_.jxr
AppX2jm25qtmp2qxstv333wv5mne3k5bf4bm_.wdp
Windows.Sandbox_.wsb
AppX2jm25qtmp2qxstv333wv5mne3k5bf4bm_.dng
AppXq0fevzme2pys62n3e0fbqa7peapykr8v_http
AppX90nv6nhay5n6a98fnetv7tpk64pp35es_https
AppX7rm9drdg8sk7vqndwj3sdjw11x96jc0y_microsoft-edge
AppX3xxs313wwkfjhythsb8q46xdsq8d2cvv_microsoft-edge-holographic
AppXdn5b0j699ka5fqvrr3pgjad0evqarm6d_ms-xbl-3d8b930f
Paint.Picture_.bmp
CABFolder_.cab
chm.file_.chm
Applications\Notepad.exe_.css
Applications\WordPad.exe_.css
Applications\Notepad.exe_.csv
Applications\WordPad.exe_.csv
Paint.Picture_.dib
giffile_.gif
PBrush_.gif
inffile_.inf
inifile_.ini
Applications\WordPad.exe_.ini
Windows.IsoFile_.iso
PBrush_.jfif
PBrush_.jpe
PBrush_.jpeg
PBrush_.jpg
JSFile_.js
wdpfile_.jxr
txtfile_.log
MSInfoFile_.nfo
PBrush_.png
Microsoft.PowerShellScript.1_.ps1
Microsoft.PowerShellData.1_.psd1
Microsoft.PowerShellModule.1_.psm1
regfile_.reg
txtfile_.scp
TIFImage.Document_.tif
PBrush_.tif
TIFImage.Document_.tiff
PBrush_.tiff
ttffile_.ttf
txtfile_.txt
textfile_.txt
wdpfile_.wdp
PBrush_.webp
MSEdgeHTM_.webp
txtfile_.wtx
xmlfile_.xml
Applications\Notepad.exe_.xml
Applications\WordPad.exe_.xml
CompressedFolder_.zip
IE.HTTP_http
MSEdgeHTM_http
IE.HTTPS_https
MSEdgeHTM_https
WMP11.AssocFile.3G2_.3g2
WMP11.AssocFile.3GP_.3gp
WMP11.AssocFile.3G2_.3gp2
WMP11.AssocFile.3GP_.3gpp
WMP11.AssocFile.ADTS_.aac
WMP11.AssocFile.ADTS_.adt
WMP11.AssocFile.ADTS_.adts
WMP11.AssocFile.AVI_.avi
WMP11.AssocFile.FLAC_.flac
htmlfile_.htm
MSEdgeHTM_.htm
Applications\notepad.exe_.htm
htmlfile_.html
MSEdgeHTM_.html
WMP11.AssocFile.M4A_.m4a
WMP11.AssocFile.MP4_.m4v
WMP11.AssocFile.MKA_.mka
WMP11.AssocFile.MOV_.mov
WMP11.AssocFile.MP3_.MP2
WMP11.AssocFile.MP3_.mp3
WMP11.AssocFile.MP4_.mp4
WMP11.AssocFile.MP4_.mp4v
WMP11.AssocFile.MPEG_.mpa
WMP11.AssocFile.MPEG_.MPE
WMP11.AssocFile.MPEG_.mpeg
WMP11.AssocFile.MPEG_.mpg
WMP11.AssocFile.M2TS_.mts
MSEdgePDF_.pdf
svgfile_.svg
MSEdgeHTM_.svg
WMP11.AssocFile.TTS_.TS
WMP11.AssocFile.TTS_.TTS
InternetShortcut_.url
WMP11.AssocFile.WAV_.wav
Microsoft.Website_.website
WMP11.AssocFile.ASF_.wm
WMP11.AssocFile.WMA_.wma
WMP11.AssocFile.WMV_.wmv
WMP11.AssocFile.WPL_.WPL
MSEdgeHTM_mailto
MSEdgeHTM_read
AppXe862j7twqs4aww05211jaakwxyfjx4da_read
ms-settings_ms-settings
AppX43hnxtbyyps62jhe9sqpdzxn1790zetc_.jpg
MSCFile_.msc
AppX5nebv0xjaxafmmr3cnptgjg9pdpqcg0h_ms-gamingoverlay
Msi.Package_.msi
steam_steam
Applications\mspaint.exe_.jpg
WinRAR_.rar
Applications\NOTEPAD.EXE_.py
py_auto_file_.py
Applications\mspaint.exe_.png
AppXws790r9w5rbb9w3p8p4qb2n97s5h6pc3_ms-contact-support
AppX43hnxtbyyps62jhe9sqpdzxn1790zetc_.jpeg
WinRAR.ZIP_.zip
AppX43hnxtbyyps62jhe9sqpdzxn1790zetc_.png
Windows.IsoFile_.img
Applications\NOTEPAD.EXE_.txt
Word.UriLink.16_ms-word
Applications\WINWORD.EXE_.dotx
Word.Template.12_.dotx
Word.Document.12_.docx
Applications\WINWORD.EXE_.docx
PowerPoint.Show.12_.pptx
AppX82a6gwre4fdg3bt635tn5ctqjf8msdd2_ms-windows-store
sh_auto_file_.sh
Applications\NOTEPAD.EXE_.sh
Applications\pythonw.exe_.py
Applications\mspaint.exe_.jpeg
----------------------------------------
appcompatflags v.20200525
(NTUSER.DAT, Software) Extracts AppCompatFlags for Windows.

Software\Microsoft\Windows NT\CurrentVersion\AppCompatFlags\Layers
LastWrite Time 2021-02-14 22:04:58Z

C:\Users\Humberto\Downloads\CONTROL\CONTROL VELOCIDAD INTERNET\Selfishnet win 7\Selfishnet win 7\SelfishNetv0.2-beta_vista.exe -> ~ RUNASADMIN
C:\Users\Humberto\Downloads\CONTROL\control\Selfishnet win 7\Selfishnet win 7\SelfishNetv0.2-beta_vista.exe -> ~ RUNASADMIN

Software\Microsoft\Windows NT\CurrentVersion\AppCompatFlags\Compatibility Assistant\Store
  2019-12-07 09:08:44Z - C:\Users\Humberto\AppData\Local\Microsoft\OneDrive\19.043.0304.0013\FileSyncConfig.exe
  2019-12-07 09:08:44Z - C:\Users\Humberto\AppData\Local\Microsoft\OneDrive\Update\OneDriveSetup.exe
  2019-12-07 09:08:44Z - C:\Users\Humberto\AppData\Local\Microsoft\OneDrive\20.201.1005.0009\FileSyncConfig.exe
  2019-12-07 09:08:44Z - C:\Program Files\WinRAR\WinRAR.exe
  2019-12-07 09:08:44Z - C:\Users\Humberto\Downloads\CONTROL VELOCIDAD INTERNET\CONTROL VELOCIDAD INTERNET\WinPcap_4_1_3.exe
  2019-12-07 09:08:44Z - C:\Users\Humberto\Downloads\CONTROL VELOCIDAD INTERNET\CONTROL VELOCIDAD INTERNET\Selfishnet win 7\Selfishnet win 7\SelfishNetv0.2-beta_vista.exe
  2019-12-07 09:08:44Z - C:\Users\Humberto\Downloads\CONTROL\CONTROL VELOCIDAD INTERNET\Selfishnet win 7\Selfishnet win 7\SelfishNetv0.2-beta_vista.exe
  2019-12-07 09:08:44Z - C:\Program Files (x86)\Epic Games\Launcher\Portal\SelfUpdateStaging\Install\Portal\Extras\Redist\LauncherPrereqSetup_x64.exe
  2019-12-07 09:08:44Z - C:\Program Files\Internet Explorer\iexplore.exe
  2019-12-07 09:08:44Z - C:\Users\Humberto\Downloads\Archivo 0008 SD\Microsoft Office 2007 Portable.exe
  2019-12-07 09:08:44Z - C:\Users\Humberto\Downloads\Archivo 0008 SD\Office2007Portable\Word2007Portable.exe
  2019-12-07 09:08:44Z - C:\Users\Humberto\Downloads\Archivo 0008 SD\Office2007Portable\App\Office2007\WINWORD.EXE
  2019-12-07 09:08:44Z - C:\Windows\System32\GfxUI.exe
  2019-12-07 09:08:44Z - C:\Users\Humberto\AppData\Local\Discord\Update.exe
  2019-12-07 09:08:44Z - C:\Users\Humberto\AppData\Local\Microsoft\OneDrive\21.002.0104.0005\FileSyncConfig.exe
  2019-12-07 09:08:44Z - C:\Users\Humberto\Downloads\microsoft office\Office2007Portable\Word2007Portable.exe
  2019-12-07 09:08:44Z - C:\Users\Humberto\Downloads\microsoft office\Office2007Portable\App\Office2007\WINWORD.EXE
  2019-12-07 09:08:44Z - C:\Users\Humberto\AppData\Local\NVIDIA Corporation\GeForceNOW\CEF\GeForceNOW.exe
  2019-12-07 09:08:44Z - C:\Users\Humberto\Downloads\CONTROL\control\Selfishnet win 7\Selfishnet win 7\SelfishNetv0.2-beta_vista.exe
  2019-12-07 09:08:44Z - C:\Users\Humberto\Downloads\PRO2016\PRO2016\Windows-ISO-Downloader.exe
  2019-12-07 09:08:44Z - SIGN.MEDIA=DC2EA Setup.exe
  2019-12-07 09:08:44Z - SIGN.MEDIA=46CB48 Office\Setup32.exe
  2019-12-07 09:08:44Z - C:\Program Files\Common Files\microsoft shared\ClickToRun\OfficeC2RClient.exe
  2019-12-07 09:08:44Z - C:\Program Files\Git\git-bash.exe
  2019-12-07 09:08:44Z - C:\Program Files\Git\git-cmd.exe
  2019-12-07 09:08:44Z - C:\Program Files (x86)\Microsoft Office\root\Office16\POWERPNT.EXE
  2019-12-07 09:08:44Z - C:\Users\Humberto\AppData\Local\Microsoft\OneDrive\21.016.0124.0003\FileSyncConfig.exe
  2019-12-07 09:08:44Z - C:\Users\Humberto\Downloads\python-3.9.2-amd64.exe
  2019-12-07 09:08:44Z - C:\Program Files\WindowsApps\Microsoft.DesktopAppInstaller_1.4.3161.0_x64__8wekyb3d8bbwe\AppInstallerPythonRedirector.exe
  2019-12-07 09:08:44Z - C:\Users\Humberto\Downloads\python-3.9.1-amd64.exe
  2019-12-07 09:08:44Z - C:\Users\Humberto\AppData\Local\Programs\Python\Launcher\py.exe
  2019-12-07 09:08:44Z - C:\Users\Humberto\AppData\Local\Programs\Python\Launcher\pyw.exe
  2019-12-07 09:08:44Z - C:\Users\Humberto\AppData\Local\Programs\Python\Python39\python.exe
  2019-12-07 09:08:44Z - C:\Users\Humberto\AppData\Local\Programs\Python\Python39\pythonw.exe
  2019-12-07 09:08:44Z - C:\Users\Humberto\AppData\Local\Microsoft\OneDrive\21.030.0211.0002\FileSyncConfig.exe
  2019-12-07 09:08:44Z - C:\Program Files (x86)\Epic Games\Launcher\Portal\Binaries\Win32\EpicGamesLauncher.exe
  2019-12-07 09:08:44Z - C:\Users\Humberto\AppData\Local\Microsoft\Teams\Update.exe
  2019-12-07 09:08:44Z - C:\Users\Humberto\AppData\Local\Microsoft\OneDrive\21.052.0314.0001\FileSyncConfig.exe
  2019-12-07 09:08:44Z - C:\Program Files (x86)\Steam\steam.exe
  2019-12-07 09:08:44Z - C:\Users\Humberto\AppData\Local\NVIDIA Corporation\GeForceNOW\CEF\GeForceNOWStreamer.exe
  2019-12-07 09:08:44Z - C:\Program Files (x86)\Microsoft Office\root\Office16\WINWORD.EXE
  2019-12-07 09:08:44Z - C:\Users\Humberto\Downloads\nmap-7.91-setup.exe
  2019-12-07 09:08:44Z - C:\Program Files (x86)\Nmap\zenmap.exe
  2019-12-07 09:08:44Z - C:\Users\Humberto\AppData\Local\WhatsApp\WhatsApp.exe
  2019-12-07 09:08:44Z - C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe
  2019-12-07 09:08:44Z - C:\Users\Humberto\AppData\Local\Microsoft\OneDrive\StandaloneUpdater\OneDriveSetup.exe
  2019-12-07 09:08:44Z - C:\Users\Humberto\AppData\Local\Microsoft\OneDrive\21.062.0328.0001\FileSyncConfig.exe
  2019-12-07 09:08:44Z - C:\Users\Humberto\Downloads\RegistryExplorer_RECmd\RegistryExplorer\RECmd.exe
  2019-12-07 09:08:44Z - C:\Users\Humberto\Downloads\rr_2.02\rr.exe
----------------------------------------
appkeys v.20200517
(NTUSER.DAT, Software) Extracts AppKeys entries.

----------------------------------------
applets v.20200525
(NTUSER.DAT) Gets contents of user's Applets key

Applets
Software\Microsoft\Windows\CurrentVersion\Applets
LastWrite Time 2020-12-26 11:41:32Z

Software\Microsoft\Windows\CurrentVersion\Applets\Paint\Recent File List
LastWrite Time 2021-04-05 09:27:36Z
  File1 -> C:\Users\Humberto\Pictures\racismo.bmp
  File2 -> C:\Users\Humberto\Pictures\racismo.jpeg
  File3 -> C:\Users\Humberto\Pictures\20000.bmp
  File4 -> C:\Users\Humberto\Pictures\20000.jpg
  File5 -> C:\Users\Humberto\Pictures\rayados-de-monterrey-escudo.bmp
  File6 -> C:\Users\Humberto\Pictures\rayados-de-monterrey-escudo.jpg
  File7 -> C:\Users\Humberto\Pictures\no.bmp
  File8 -> C:\Users\Humberto\Pictures\no.jpg
  File9 -> C:\Users\Humberto\Pictures\Mexico.bmp
----------------------------------------
apppaths v.20200511
(NTUSER.DAT,Software) Gets content of App Paths subkeys

2021-02-08 02:21:34Z
  OneDriveFileLauncher.exe - 
2021-02-03 02:05:51Z
  Skype.exe - C:\Program Files\WindowsApps\Microsoft.SkypeApp_15.68.96.0_x86__kzf8qxf38zg5c\Skype\Skype.exe
----------------------------------------
Software\Microsoft\IntelliPoint\AppSpecific not found.
----------------------------------------
appx v.20200427
(NTUSER.DAT, USRCLASS.DAT) Checks for persistence via Universal Windows Platform Apps

----------------------------------------
arpcache v.20200515
(NTUSER.DAT) Retrieves CurrentVersion\App Management\ARPCache entries

Software\Microsoft\Windows\CurrentVersion\App Management\ARPCache not found.
----------------------------------------
attachmgr v.20200525
(NTUSER.DAT) Checks user's keys that manage the Attachment Manager functionality

Software\Microsoft\Windows\CurrentVersion\Policies\Associations not found.

Software\Microsoft\Windows\CurrentVersion\Policies\Attachments not found.

----------------------------------------
cached v.20200525
(NTUSER.DAT) Gets cached Shell Extensions from NTUSER.DAT hive

Software\Microsoft\Windows\CurrentVersion\Shell Extensions\Cached
LastWrite Time 2021-04-25 05:29:23Z

2020-12-17 05:01:07Z  First Load: {4234D49B-0245-4DF3-B780-3893943456E1} (IShellFolder)
2020-12-17 05:01:09Z  First Load: {B2952B16-0E07-4E5A-B993-58C52CB94CAE} (IShellFolder)
2020-12-17 05:01:24Z  First Load: {C7657C4A-9F68-40FA-A4DF-96BC08EB3551} ({E357FCCD-A995-4576-B01F-234630154E96})
2020-12-17 05:01:25Z  First Load: {D9144DCD-E998-4ECA-AB6A-DCD83CCBA16D} (IShellIconOverlayIdentifier)
2020-12-17 05:01:25Z  First Load: {4E77131D-3629-431C-9818-C5679DC83E81} (IShellIconOverlayIdentifier)
2020-12-17 05:01:35Z  First Load: {04731B67-D933-450A-90E6-4ACD2E9408FE} (IDelegateFolder)
2020-12-17 05:02:02Z  First Load: {40DD6E20-7C17-11CE-A804-00AA003CA9F6} (IShellCopyHookW)
2020-12-17 05:02:38Z  First Load: {2227A280-3AEA-1069-A2DE-08002B30309D} (IShellFolder)
2020-12-17 05:02:56Z  First Load: {BD7A2E7B-21CB-41B2-A086-B309680C6B7E} (IShellFolder)
2020-12-17 05:02:56Z  First Load: {9E175B8B-F52A-11D8-B9A5-505054503030} (IDBProperties)
2020-12-17 05:03:41Z  First Load: {FF393560-C2A7-11CF-BFF4-444553540000} (IShellFolder)
2020-12-17 05:04:58Z  First Load: {596AB062-B4D2-4215-9F74-E9109B0A8153} (IContextMenu)
2020-12-17 05:04:58Z  First Load: {474C98EE-CF3D-41F5-80E3-4AAB0AB04301} (IContextMenu)
2020-12-17 05:04:58Z  First Load: {00021401-0000-0000-C000-000000000046} (IContextMenu)
2020-12-17 05:04:58Z  First Load: {E61BF828-5E63-4287-BEF1-60B1A4FDE0E3} (IContextMenu)
2020-12-17 05:04:58Z  First Load: {888DCA60-FC0A-11CF-8F0F-00C04FD7D062} (IDropTarget)
2020-12-17 05:04:58Z  First Load: {F81E9010-6EA4-11CE-A7FF-00AA003CA9F6} (IContextMenu)
2020-12-17 05:04:58Z  First Load: {E2BF9676-5F8F-435C-97EB-11607A5BEDF7} (IContextMenu)
2020-12-17 05:04:58Z  First Load: {09A47860-11B0-4DA5-AFA5-26D86198A780} (IContextMenu)
2020-12-17 05:04:58Z  First Load: {CB3D0F55-BC2C-4C1A-85ED-23ED75B5106B} (IContextMenu)
2020-12-17 05:04:58Z  First Load: {470C0EBD-5D73-4D58-9CED-E91E22E23282} (IContextMenu)
2020-12-17 05:04:58Z  First Load: {9E56BE60-C50F-11CF-9A2C-00A0C90A90CE} (IDropTarget)
2020-12-17 05:04:58Z  First Load: {1D27F844-3A1F-4410-85AC-14651078412D} (IContextMenu)
2020-12-17 05:04:58Z  First Load: {ECF03A32-103D-11D2-854D-006008059367} (IDropTarget)
2020-12-17 05:05:06Z  First Load: {44090B31-CDF9-4AD1-8182-DB5DA3627974} (IExecuteCommand)
2020-12-17 05:05:07Z  First Load: {0CD7A5C0-9F37-11CE-AE65-08002B2E1262} (IShellFolder)
2020-12-17 05:11:39Z  First Load: {0BF754AA-C967-445C-AB3D-D8FDA9BAE7EF} (IContextMenu)
2020-12-17 05:11:39Z  First Load: {99D353BC-C813-41EC-8F28-EAE61E702E57} (IExplorerCommand)
2020-12-17 05:11:39Z  First Load: {3AB1675A-CCFF-11D2-8B20-00A0C93CB1F4} (IContextMenu)
2020-12-17 05:19:38Z  First Load: {9C73F5E5-7AE7-4E32-A8E8-8D23B85255BF} (IShellFolder)
2020-12-17 05:20:44Z  First Load: {7AD84985-87B4-4A16-BE58-8B72A5B390F7} (IContextMenu)
2020-12-17 05:20:44Z  First Load: {9E56BE61-C50F-11CF-9A2C-00A0C90A90CE} (IDropTarget)
2020-12-17 05:20:45Z  First Load: {289AF617-1CC3-42A6-926C-E6A863F0E3BA} (IDelegateFolder)
2020-12-17 05:20:45Z  First Load: {35786D3C-B075-49B9-88DD-029876E11C01} (IDelegateFolder)
2020-12-17 05:20:45Z  First Load: {9113A02D-00A3-46B9-BC5F-9C04DADDD5D7} (IDelegateFolder)
2020-12-17 05:23:49Z  First Load: {11DBB47C-A525-400B-9E80-A54615A090C0} (IExecuteCommand)
2020-12-17 05:23:52Z  First Load: {C2B136E2-D50E-405C-8784-363C582BF43E} (IDelegateFolder)
2020-12-17 05:24:02Z  First Load: {BF85540E-0DF3-47BC-AC5D-305442704708} ({05B2F74E-2712-46BA-BCA3-F65A46BF0E00})
2020-12-17 05:29:03Z  First Load: {2781761E-28E0-4109-99FE-B9D127C57AFE} ({56FFCC30-D398-11D0-B2AE-00A0C908FA49})
2020-12-17 07:30:13Z  First Load: {BBACC218-34EA-4666-9D7A-C78F2274A524} (IShellIconOverlayIdentifier)
2020-12-17 07:30:13Z  First Load: {5AB7172C-9C11-405C-8DD5-AF20F3606282} (IShellIconOverlayIdentifier)
2020-12-17 07:30:13Z  First Load: {A78ED123-AB77-406B-9962-2A5D9D2F7F30} (IShellIconOverlayIdentifier)
2020-12-17 07:30:13Z  First Load: {F241C880-6982-4CE5-8CF7-7085BA96DA5A} (IShellIconOverlayIdentifier)
2020-12-17 07:30:13Z  First Load: {A0396A93-DC06-4AEF-BEE9-95FFCCAEF20E} (IShellIconOverlayIdentifier)
2020-12-17 07:30:13Z  First Load: {9AA2F32D-362A-42D9-9328-24A483E2CCC3} (IShellIconOverlayIdentifier)
2020-12-17 07:30:13Z  First Load: {C5FF006E-2AE9-408C-B85B-2DFDD5449D9C} (IShellIconOverlayIdentifier)
2020-12-17 07:30:13Z  First Load: {F02C1A0D-BE21-4350-88B0-7367FC96EF3C} (IShellFolder)
2020-12-17 07:36:33Z  First Load: {A38B883C-1682-497E-97B0-0A3A9E801682} ({886D8EEB-8CF2-4446-8D02-CDBA1DBDCF99})
2020-12-17 07:37:06Z  First Load: {B7373566-8FF2-45D8-AF1F-DA39F289BCF9} (IExplorerCommand)
2020-12-17 07:37:15Z  First Load: {2854F705-3548-414C-A113-93E27C808C85} (IContextMenu)
2020-12-17 07:38:21Z  First Load: {D6791A63-E7E2-4FEE-BF52-5DED8E86E9B8} (IContextMenu)
2020-12-17 07:39:19Z  First Load: {F81E9010-6EA4-11CE-A7FF-00AA003CA9F6} ({000214E9-0000-0000-C000-000000000046})
2020-12-17 07:39:20Z  First Load: {1F2E5C40-9550-11CE-99D2-00AA006E086C} ({000214E9-0000-0000-C000-000000000046})
2020-12-17 07:39:20Z  First Load: {4A7DED0A-AD25-11D0-98A8-0800361B1103} ({000214E9-0000-0000-C000-000000000046})
2020-12-17 07:39:20Z  First Load: {55B3A0BD-4D28-42FE-8CFB-FA3EDFF969B8} ({000214E9-0000-0000-C000-000000000046})
2020-12-17 07:39:20Z  First Load: {596AB062-B4D2-4215-9F74-E9109B0A8153} ({000214E9-0000-0000-C000-000000000046})
2020-12-17 07:39:20Z  First Load: {7988B573-EC89-11CF-9C00-00AA00A14F56} ({000214E9-0000-0000-C000-000000000046})
2020-12-17 07:39:20Z  First Load: {ECCDF543-45CC-11CE-B9BF-0080C87CDBA6} ({000214E9-0000-0000-C000-000000000046})
2020-12-17 07:39:20Z  First Load: {748F920F-FB24-4D09-B360-BAF6F199AD6D} ({000214E9-0000-0000-C000-000000000046})
2020-12-17 07:39:20Z  First Load: {7EFA68C6-086B-43E1-A2D2-55A113531240} ({000214E9-0000-0000-C000-000000000046})
2020-12-17 07:39:43Z  First Load: {BD472F60-27FA-11CF-B8B4-444553540000} (IContextMenu)
2020-12-17 07:41:58Z  First Load: {9C07355E-C50A-45D2-B4A3-0A8235F8047F} (IExplorerCommand)
2020-12-17 07:44:46Z  First Load: {0E32D9F9-10FB-4B90-8B24-826B07B084D0} (IExplorerCommand)
2020-12-17 07:44:46Z  First Load: {69375D35-B310-40FD-A7DC-9548E1DBC3B5} (IExplorerCommand)
2020-12-17 07:44:46Z  First Load: {35A5E985-12E6-46EE-B385-E887F3940FB0} (IExplorerCommand)
2020-12-17 07:45:01Z  First Load: {7A80E4A8-8005-11D2-BCF8-00C04F72C717} (IExtractIconW)
2020-12-19 11:42:56Z  First Load: {3F30C968-480A-4C6C-862D-EFC0897BB84B} ({BB2E617C-0920-11D1-9A0B-00C04FC2D6C1})
2020-12-23 06:40:51Z  First Load: {776DBC8D-7347-478C-8D71-791E12EF49D8} (IExplorerCommand)
2020-12-23 06:40:52Z  First Load: {B41DB860-64E4-11D2-9906-E49FADC173CA} (IDropTarget)
2020-12-23 06:40:52Z  First Load: {E2BF9676-5F8F-435C-97EB-11607A5BEDF7} (IExplorerCommand)
2020-12-23 06:40:52Z  First Load: {B41DB860-64E4-11D2-9906-E49FADC173CA} (IContextMenu)
2020-12-23 06:41:42Z  First Load: {FBF23B40-E3F0-101B-8488-00AA003E56F8} (IShellLinkW)
2020-12-23 06:41:43Z  First Load: {FBF23B40-E3F0-101B-8488-00AA003E56F8} (IExtractIconW)
2020-12-23 11:09:48Z  First Load: {513D916F-2A8E-4F51-AEAB-0CBC76FB1AF8} ({000214E9-0000-0000-C000-000000000046})
2020-12-23 11:09:48Z  First Load: {B41DB860-64E4-11D2-9906-E49FADC173CA} ({000214E9-0000-0000-C000-000000000046})
2020-12-23 11:09:48Z  First Load: {7444C719-39BF-11D1-8CD9-00C04FC29D45} ({000214E9-0000-0000-C000-000000000046})
2020-12-23 11:09:48Z  First Load: {3EA48300-8CF6-101B-84FB-666CCB9BCD32} ({000214E9-0000-0000-C000-000000000046})
2020-12-25 06:08:01Z  First Load: {8D80504A-0826-40C5-97E1-EBC68F953792} ({886D8EEB-8CF2-4446-8D02-CDBA1DBDCF99})
2020-12-26 08:31:07Z  First Load: {FBF23B40-E3F0-101B-8488-00AA003E56F8} (IContextMenu)
2020-12-31 03:29:51Z  First Load: {FBF23B40-E3F0-101B-8488-00AA003E56F8} ({00021500-0000-0000-C000-000000000046})
2021-01-05 10:47:20Z  First Load: {D2942F8E-478E-41D3-870A-35A16238F4EE} ({000214E9-0000-0000-C000-000000000046})
2021-01-07 18:45:10Z  First Load: {FFE2A43C-56B9-4BF5-9A79-CC6D4285608A} (IContextMenu)
2021-01-07 23:33:39Z  First Load: {E44E9428-BDBC-4987-A099-40DC8FD255E7} (IExecuteCommand)
2021-01-09 02:36:58Z  First Load: {17FE9752-0B5A-4665-84CD-569794602F5C} (IExecuteCommand)
2021-01-12 20:59:44Z  First Load: {FBF23B40-E3F0-101B-8488-00AA003E56F8} ({886D8EEB-8CF2-4446-8D02-CDBA1DBDCF99})
2021-01-21 19:51:35Z  First Load: {97E467B4-98C6-4F19-9588-161B7773D6F6} ({886D8EEB-8CF2-4446-8D02-CDBA1DBDCF99})
2021-01-29 16:23:15Z  First Load: {047EA9A0-93BB-415F-A1C3-D7AEB3DD5087} (IDropTarget)
2021-01-29 16:23:15Z  First Load: {AEE2420F-D50E-405C-8784-363C582BF45A} (IDelegateFolder)
2021-02-03 01:55:42Z  First Load: {A55803CC-4D53-404C-8557-FD63DBA95D24} ({C1FB73D0-EC3A-4BA2-B512-8CDB9187B6D1})
2021-02-10 19:15:45Z  First Load: {E88DCCE0-B7B3-11D1-A9F0-00AA0060FA31} (IShellFolder)
2021-02-14 09:43:45Z  First Load: {72B66649-3DBF-429F-BD6F-7774A9784B78} ({BB2E617C-0920-11D1-9A0B-00C04FC2D6C1})
2021-02-14 09:43:45Z  First Load: {355822FC-86F1-4BE8-B5F0-A33736789641} ({BB2E617C-0920-11D1-9A0B-00C04FC2D6C1})
2021-02-14 09:54:20Z  First Load: {AB968F1E-E20B-403A-9EB8-72EB0EB6797E} (IExtractIconW)
2021-02-14 09:55:57Z  First Load: {264FFAF3-9A9C-42B7-AEDB-34896CDBC7C1} (IExecuteCommand)
2021-02-14 10:05:01Z  First Load: {5985FC23-2588-4D9A-B38B-7E7AFFAB3155} ({886D8EEB-8CF2-4446-8D02-CDBA1DBDCF99})
2021-02-16 01:52:19Z  First Load: {12F0008F-2113-482A-80B3-FD5E91C12313} (IShellFolder)
2021-02-16 08:06:41Z  First Load: {A8A91A66-3A7D-4424-8D24-04E180695C7A} (IShellFolder)
2021-02-16 08:06:44Z  First Load: {4876DC0E-F963-4227-9A8F-19872B75D231} (IExplorerCommand)
2021-02-16 08:06:44Z  First Load: {361778EC-D741-4CE1-90F9-743435F56E13} (IExplorerCommand)
2021-02-16 08:06:44Z  First Load: {A8A91A66-3A7D-4424-8D24-04E180695C7A} (IExplorerCommand)
2021-02-16 08:06:44Z  First Load: {B5A60A9E-A4C7-4A93-AC6E-0B76D1D87DC4} (IContextMenu)
2021-02-16 08:06:44Z  First Load: {5C0D19E4-A364-4EF6-9288-DBD194593879} ({000214E9-0000-0000-C000-000000000046})
2021-02-16 08:06:45Z  First Load: {5F884992-EE6D-418B-9E6C-0C2A0FA94D17} ({000214E9-0000-0000-C000-000000000046})
2021-02-16 08:06:45Z  First Load: {61F7B364-432C-4D04-BBC1-7FC1BF3807A8} ({000214E9-0000-0000-C000-000000000046})
2021-02-16 08:06:45Z  First Load: {F77C0A7D-7395-45C5-BDFC-B096BF6C4DA0} ({000214E9-0000-0000-C000-000000000046})
2021-02-16 08:06:49Z  First Load: {2D1F634B-BA35-4BA0-A3B4-B03AC5FE724A} (IContextMenu)
2021-02-19 05:55:35Z  First Load: {40DD6E20-7C17-11CE-A804-00AA003CA9F6} ({000214EF-0000-0000-C000-000000000046})
2021-02-21 09:01:43Z  First Load: {F81B1B56-7613-4EE4-BC05-1FAB5DE5C07E} ({886D8EEB-8CF2-4446-8D02-CDBA1DBDCF99})
2021-02-21 10:35:41Z  First Load: {939D20AC-8036-406F-BD5C-BF672896BD71} (IExplorerCommand)
2021-02-22 15:58:01Z  First Load: {01BE4CFB-129A-452B-A209-F9D40B3B84A5} ({886D8EEB-8CF2-4446-8D02-CDBA1DBDCF99})
2021-02-22 16:26:42Z  First Load: {35C5242B-7455-4F9C-962B-369EA43ED6F3} ({BB2E617C-0920-11D1-9A0B-00C04FC2D6C1})
2021-03-17 08:41:43Z  First Load: {7B81BE6A-CE2B-4676-A29E-EB907A5126C5} (IShellFolder)
2021-03-20 05:01:29Z  First Load: {60254CA5-953B-11CF-8C96-00AA00B8708C} (IDropTarget)
2021-03-27 06:05:02Z  First Load: {33154C99-BF49-443D-A73C-303A23ABBE97} ({886D8EEB-8CF2-4446-8D02-CDBA1DBDCF99})
2021-03-27 08:18:58Z  First Load: {E44E9428-BDBC-4987-A099-40DC8FD255E7} ({6A283FE2-ECFA-4599-91C4-E80957137B26})
2021-04-25 05:29:23Z  First Load: {B41DB860-8EE4-11D2-9906-E49FADC173CA} (IContextMenu)
----------------------------------------
cmdproc v.20200515
(NTUSER.DAT) Autostart - get Command Processor\AutoRun value from NTUSER.DAT hive

Software\Microsoft\Command Processor not found.
----------------------------------------
comdlg32 v.20200517

Software\Microsoft\Windows\CurrentVersion\Explorer\ComDlg32
LastWrite Time 2020-12-17 18:57:17Z
CIDSizeMRU
LastWrite: 2021-04-27 19:50:18Z
Note: All value names are listed in MRUListEx order.

  Teams.exe
  {79843456-3749-4617-AD01-96393CDB86E7}
  Discord.exe
  WhatsApp.exe
  pythonw.exe
  notepad.exe
  msedge.exe
  OpenWith.exe
  mspaint.exe
  steam.exe
  PowerShell_ISE.exe
  {86C73014-DF81-4AC8-B434-06D8203D5ED5}
  {61A63EDC-7CB2-4FB1-8E72-E164EFF69869}
  {52A26A79-A2B2-4162-815D-9E53609EF8E3}
  PickerHost.exe

LastVisitedPidlMRU
LastWrite time: 2021-04-27 19:50:18Z
Note: All value names are listed in MRUListEx order.

  Teams.exe - My Computer\CLSID_Desktop\algebra
  {79843456-3749-4617-AD01-96393CDB86E7} - My Computer\C:\Users\Humberto\Desktop\algebra
  Discord.exe - My Computer\CLSID_Desktop\practica1\practica1
  WhatsApp.exe - My Computer\{088e3905-0323-4b02-9826-5d99428e115f}
  pythonw.exe - My Computer\CLSID_Desktop
  NOTEPAD.EXE - My Computer\CLSID_Desktop
  msedge.exe - My Computer\CLSID_Desktop
  OpenWith.exe - My Computer\CLSID_Desktop
  mspaint.exe - My Computer\{24ad3ad4-a569-4530-98e1-ab02f9417aa8}
  steam.exe - My Computer\{24ad3ad4-a569-4530-98e1-ab02f9417aa8}
  PowerShell_ISE.exe - My Computer\CLSID_Desktop
  {86C73014-DF81-4AC8-B434-06D8203D5ED5} - My Computer\C:\Users\Humberto\Desktop
  {52A26A79-A2B2-4162-815D-9E53609EF8E3} - My Computer\C:\Users\Humberto\Desktop
  PickerHost.exe - My Computer\{088e3905-0323-4b02-9826-5d99428e115f}

OpenSavePidlMRU
LastWrite time: 2021-04-03 06:02:07Z
OpenSavePidlMRU\*
LastWrite Time: Tue Apr 27 19:50:18 2021
Note: All value names are listed in MRUListEx order.

  My Computer\CLSID_Desktop\algebra\1645681_humberto.martinez_4PTopAl14.pdf
  My Computer\C:\Users\Humberto\Desktop\algebra\1645681_humberto.martinez_4PTopAl14.pdf
  Explorer\Doc1.pdf
  My Computer\{088e3905-0323-4b02-9826-5d99428e115f}\instrucciones (1).pdf
  My Computer\{24ad3ad4-a569-4530-98e1-ab02f9417aa8}\SORTEO TEC.pdf
  My Computer\{24ad3ad4-a569-4530-98e1-ab02f9417aa8}\WhatsApp Image 2021-04-23 at 8.28.07 AM (1).jpeg
  My Computer\{24ad3ad4-a569-4530-98e1-ab02f9417aa8}\WhatsApp Image 2021-04-23 at 8.28.07 AM.jpeg
  My Computer\CLSID_Desktop\ftp.py
  My Computer\CLSID_Desktop\codnmap.txt
  My Computer\CLSID_Desktop\nmap.txt
  My Computer\CLSID_Desktop\nmap64.py
  My Computer\CLSID_Desktop\mate discretas\Tarea 4  lab mate discretas.pdf
  My Computer\C:\Users\Humberto\Desktop\mate discretas\Tarea 4  lab mate discretas.pdf
  My Computer\CLSID_Desktop\mate discretas\2do examen parcial.pdf
  My Computer\C:\Users\Humberto\Desktop\mate discretas\2do examen parcial.pdf
  My Computer\{d3162b92-9365-467a-956b-92703aca08af}\MATEMATICAS_DISCRETAS_Richard_Johnsonbau (1).pdf
  My Computer\CLSID_Desktop\practica2.PY
  My Computer\CLSID_Desktop\humberto.PY
  My Computer\CLSID_Desktop\PI.PY
  My Computer\CLSID_Desktop\fghgfh

OpenSavePidlMRU\bat
LastWrite Time: Sat Apr  3 06:00:01 2021
Note: All value names are listed in MRUListEx order.


OpenSavePidlMRU\bmp
LastWrite Time: Mon Apr  5 09:27:35 2021
Note: All value names are listed in MRUListEx order.

  My Computer\{24ad3ad4-a569-4530-98e1-ab02f9417aa8}\racismo.bmp
  My Computer\{24ad3ad4-a569-4530-98e1-ab02f9417aa8}\20000.bmp
  My Computer\{24ad3ad4-a569-4530-98e1-ab02f9417aa8}\rayados-de-monterrey-escudo.bmp
  My Computer\{24ad3ad4-a569-4530-98e1-ab02f9417aa8}\no.bmp
  My Computer\{24ad3ad4-a569-4530-98e1-ab02f9417aa8}\Mexico.bmp
  My Computer\{24ad3ad4-a569-4530-98e1-ab02f9417aa8}\valve.bmp

OpenSavePidlMRU\cmd
LastWrite Time: Sat Apr  3 06:00:01 2021
Note: All value names are listed in MRUListEx order.


OpenSavePidlMRU\com
LastWrite Time: Sat Apr  3 06:00:01 2021
Note: All value names are listed in MRUListEx order.


OpenSavePidlMRU\docx
LastWrite Time: Fri Mar 19 15:51:06 2021
Note: All value names are listed in MRUListEx order.

  My Computer\C:\Users\Humberto\Desktop\Guía de estudio para el examen parcial # 1.docx
  My Computer\CLSID_Desktop\Unknown Type (0x36)
  My Computer\C:\Users\Humberto\Desktop\mate discretas\tarea 3 lab.docx
  My Computer\CLSID_Desktop\Ecuaciones Diferenciales de Variables Separables.docx
  My Computer\C:\Users\Humberto\Desktop\Ecuaciones Diferenciales de Variables Separables.docx
  My Computer\CLSID_Desktop\PORTADA.docx

OpenSavePidlMRU\dotx
LastWrite Time: Tue Feb 16 01:52:42 2021
Note: All value names are listed in MRUListEx order.

  My Computer\CLSID_Desktop\Identificacion Alumno humberto mtz.dotx

OpenSavePidlMRU\exe
LastWrite Time: Sat Apr  3 06:01:20 2021
Note: All value names are listed in MRUListEx order.

  My Computer\C:\Users\Humberto\AppData\Local\Programs\Python\Python39\pythonw.exe

OpenSavePidlMRU\html
LastWrite Time: Fri Jan 29 16:21:17 2021
Note: All value names are listed in MRUListEx order.

  My Computer\{d3162b92-9365-467a-956b-92703aca08af}\SERVICIOS DE SALUD DE NUEVO LEON.html
  My Computer\{24ad3ad4-a569-4530-98e1-ab02f9417aa8}\Catarata Palouse.html

OpenSavePidlMRU\jpeg
LastWrite Time: Fri Apr 23 20:29:51 2021
Note: All value names are listed in MRUListEx order.

  My Computer\{24ad3ad4-a569-4530-98e1-ab02f9417aa8}\WhatsApp Image 2021-04-23 at 8.28.07 AM (1).jpeg
  My Computer\{24ad3ad4-a569-4530-98e1-ab02f9417aa8}\WhatsApp Image 2021-04-23 at 8.28.07 AM.jpeg
  My Computer\{24ad3ad4-a569-4530-98e1-ab02f9417aa8}\racismo.jpeg
  My Computer\{088e3905-0323-4b02-9826-5d99428e115f}\WhatsApp Image 2021-02-10 at 1.05.54 PM.jpeg
  My Computer\{088e3905-0323-4b02-9826-5d99428e115f}\WhatsApp Image 2021-02-10 at 1.00.24 PM (2).jpeg
  My Computer\{088e3905-0323-4b02-9826-5d99428e115f}\WhatsApp Image 2021-02-10 at 1.00.24 PM (1).jpeg
  My Computer\{088e3905-0323-4b02-9826-5d99428e115f}\WhatsApp Image 2021-02-10 at 1.00.24 PM.jpeg
  My Computer\{088e3905-0323-4b02-9826-5d99428e115f}\WhatsApp Image 2021-02-10 at 1.00.25 PM.jpeg
  My Computer\{088e3905-0323-4b02-9826-5d99428e115f}\WhatsApp Image 2021-02-10 at 12.52.05 PM.jpeg
  My Computer\{088e3905-0323-4b02-9826-5d99428e115f}\WhatsApp Image 2021-02-10 at 12.52.06 PM (1).jpeg

OpenSavePidlMRU\jpg
LastWrite Time: Sun Mar 14 08:15:42 2021
Note: All value names are listed in MRUListEx order.

  My Computer\{24ad3ad4-a569-4530-98e1-ab02f9417aa8}\20000.jpg
  My Computer\{24ad3ad4-a569-4530-98e1-ab02f9417aa8}\rayados-de-monterrey-escudo.jpg
  My Computer\{24ad3ad4-a569-4530-98e1-ab02f9417aa8}\no.jpg
  My Games\Unknown Type (0x78)
  My Computer\{088e3905-0323-4b02-9826-5d99428e115f}\valve.jpg
  My Computer\{088e3905-0323-4b02-9826-5d99428e115f}\451329.jpg

OpenSavePidlMRU\lnk
LastWrite Time: Sat Apr  3 06:02:07 2021
Note: All value names are listed in MRUListEx order.

  My Computer\CLSID_Desktop\IDLE (Python 3.9 64-bit).lnk

OpenSavePidlMRU\pdf
LastWrite Time: Tue Apr 27 19:50:18 2021
Note: All value names are listed in MRUListEx order.

  My Computer\CLSID_Desktop\algebra\1645681_humberto.martinez_4PTopAl14.pdf
  My Computer\C:\Users\Humberto\Desktop\algebra\1645681_humberto.martinez_4PTopAl14.pdf
  Explorer\Doc1.pdf
  My Computer\{088e3905-0323-4b02-9826-5d99428e115f}\instrucciones (1).pdf
  My Computer\{24ad3ad4-a569-4530-98e1-ab02f9417aa8}\SORTEO TEC.pdf
  My Computer\CLSID_Desktop\mate discretas\Tarea 4  lab mate discretas.pdf
  My Computer\C:\Users\Humberto\Desktop\mate discretas\Tarea 4  lab mate discretas.pdf
  My Computer\CLSID_Desktop\mate discretas\2do examen parcial.pdf
  My Computer\C:\Users\Humberto\Desktop\mate discretas\2do examen parcial.pdf
  My Computer\{d3162b92-9365-467a-956b-92703aca08af}\MATEMATICAS_DISCRETAS_Richard_Johnsonbau (1).pdf
  My Computer\CLSID_Desktop\calculo integral\Humberto_martinez_032_derivar función Logaritmo Natural compuesta.pdf
  My Computer\C:\Users\Humberto\Desktop\calculo integral\Unknown Type (0x36)
  My Computer\CLSID_Desktop\algebra\1645681_humberto.martinez_3PTopAl14.pdf
  My Computer\C:\Users\Humberto\Desktop\algebra\1645681_humberto.martinez_3PTopAl14.pdf
  My Computer\{d3162b92-9365-467a-956b-92703aca08af}\listado_03abr2021.pdf
  My Computer\CLSID_Desktop\algebra\1645681_humberto.martinez_2PTopAl14.pdf
  My Computer\CLSID_Desktop\Guía de estudio para el examen parcial # 1.pdf
  My Computer\C:\Users\Humberto\Desktop\Unknown Type (0x36)
  My Computer\CLSID_Desktop\1er examen parcial.pdf
  My Computer\CLSID_Desktop\mate discretas\tarea 3 lab.pdf

OpenSavePidlMRU\pif
LastWrite Time: Sat Apr  3 06:00:01 2021
Note: All value names are listed in MRUListEx order.


OpenSavePidlMRU\png
LastWrite Time: Fri Jan 29 20:52:25 2021
Note: All value names are listed in MRUListEx order.

  My Computer\{24ad3ad4-a569-4530-98e1-ab02f9417aa8}\Mexico.png
  My Computer\{24ad3ad4-a569-4530-98e1-ab02f9417aa8}\examen.png

OpenSavePidlMRU\pptx
LastWrite Time: Mon Feb 22 16:26:38 2021
Note: All value names are listed in MRUListEx order.

  My Computer\CLSID_Desktop\paz negativa y positiva.pptx

OpenSavePidlMRU\py
LastWrite Time: Fri Apr 23 08:20:42 2021
Note: All value names are listed in MRUListEx order.

  My Computer\CLSID_Desktop\ftp.py
  My Computer\CLSID_Desktop\nmap64.py
  My Computer\CLSID_Desktop\practica2.PY
  My Computer\CLSID_Desktop\humberto.PY
  My Computer\CLSID_Desktop\PI.PY
  My Computer\CLSID_Desktop\practica1\practica5\practica5.py
  My Computer\CLSID_Desktop\encriptar y desencriptar.py
  My Computer\CLSID_Desktop\tareaASiNCRONA.py
  My Computer\CLSID_Desktop\prueba2.py
  My Computer\CLSID_Desktop\prueba21.py
  My Computer\CLSID_Desktop\prueba20.py
  My Computer\CLSID_Desktop\prueba10.py
  My Computer\CLSID_Desktop\prueba1.py
  My Computer\CLSID_Desktop\prueba.py
  My Computer\CLSID_Desktop\socket_humberto_mtz_1645681.py
  My Computer\CLSID_Desktop\5555.py
  My Computer\CLSID_Desktop\asdasdasd.py
  My Computer\CLSID_Desktop\perfect.py

OpenSavePidlMRU\sh
LastWrite Time: Sat Mar 20 06:08:09 2021
Note: All value names are listed in MRUListEx order.

  My Computer\CLSID_Desktop\practica3\humbertoscript.sh

OpenSavePidlMRU\txt
LastWrite Time: Fri Apr 23 07:45:09 2021
Note: All value names are listed in MRUListEx order.

  My Computer\CLSID_Desktop\codnmap.txt
  My Computer\CLSID_Desktop\nmap.txt
  My Computer\CLSID_Desktop\llave.txt
  My Computer\{d3162b92-9365-467a-956b-92703aca08af}\llave.txt
  My Computer\CLSID_Desktop\Unknown Type (0x36)


----------------------------------------
compdesc v.20200511
(NTUSER.DAT) Gets contents of user's ComputerDescriptions key

Software\Microsoft\Windows\CurrentVersion\Explorer\ComputerDescriptions not found.
----------------------------------------
DDO v.20140414
(NTUSER.DAT) Gets user's DeviceDisplayObjects key contents

Software\Microsoft\Windows NT\CurrentVersion\DeviceDisplayObjects not found.
----------------------------------------
disablemru v.20190924
(NTUSER.DAT, Software) Checks settings disabling user's MRUs

----------------------------------------
environment v.20200512
(System, NTUSER.DAT) Get environment vars from NTUSER.DAT & System hives

Environment
LastWrite Time: 2021-04-28 23:25:20Z

Path                      C:\Users\Humberto\AppData\Local\Programs\Python\Python39\Scripts\;C:\Users\Humberto\AppData\Local\Programs\Python\Python39\;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;C:\Program Files (x86)\Nmap
TEMP                      %USERPROFILE%\AppData\Local\Temp                  
TMP                       %USERPROFILE%\AppData\Local\Temp                  
OneDrive                  C:\Users\Humberto\OneDrive                        
----------------------------------------
featureusage v.20200511
(NTUSER.DAT) Extracts user's FeatureUsage data.

Software\Microsoft\Windows\CurrentVersion\Explorer\FeatureUsage
LastWrite Time:  2021-01-07 23:14:05Z
KeyCreationTime: 2020-12-17 05:04:55Z

***AppBadgeUpdated values***
C:\Users\Humberto\AppData\Local\SquirrelTemp\Update.exe                           3
com.squirrel.Teams.Teams                                                          291
com.squirrel.Discord.Discord                                                      17
com.squirrel.WhatsApp.WhatsApp                                                    248

***AppLaunch values***
Microsoft.Windows.Explorer                                                        108
MSEdge.UserData.Default                                                           94
MSEdge                                                                            67

***AppSwitched values***
MSEdge                                                                            507
C:\Users\Humberto\AppData\Local\NVIDIA Corporation\GeForceNOW\CEF\GeForceNOW.exe  58
MSEdge.UserData.Default                                                           297
windows.immersivecontrolpanel_cw5n1h2txyewy!microsoft.windows.immersivecontrolpanel  12
Microsoft.Windows.Explorer                                                        174
{1AC14E77-02E7-4E5D-B744-2EB1AE5198B7}\diskmgmt.msc                               2
C:\Users\Humberto\Downloads\winrar-x64-600es.exe                                  1
{1AC14E77-02E7-4E5D-B744-2EB1AE5198B7}\OptionalFeatures.exe                       9
C:\Users\Humberto\Downloads\CONTROL VELOCIDAD INTERNET\CONTROL VELOCIDAD INTERNET\Selfishnet win 7\Selfishnet win 7\SelfishNetv0.2-beta_vista.exe  1
C:\Users\Humberto\Downloads\CONTROL\CONTROL VELOCIDAD INTERNET\Selfishnet win 7\Selfishnet win 7\SelfishNetv0.2-beta_vista.exe  2
Valve.Steam.Client                                                                73
{7C5A40EF-A0FB-4BFC-874A-C0F2E0B9FA8E}\Epic Games\Launcher\Portal\Binaries\Win32\EpicGamesLauncher.exe  2
{7C5A40EF-A0FB-4BFC-874A-C0F2E0B9FA8E}\Steam\steamapps\common\Left 4 Dead 2\left4dead2.exe  76
Microsoft.WindowsCalculator_8wekyb3d8bbwe!App                                     6
com.squirrel.Teams.Teams                                                          784
com.squirrel.Discord.Discord                                                      265
{1AC14E77-02E7-4E5D-B744-2EB1AE5198B7}\notepad.exe                                60
Microsoft.AutoGenerated.{6BC7CDC2-9FF1-8E1A-646B-DB1B3C444B5E}                    239
{1AC14E77-02E7-4E5D-B744-2EB1AE5198B7}\cmd.exe                                    123
{1AC14E77-02E7-4E5D-B744-2EB1AE5198B7}\mspaint.exe                                4
C:\Users\Humberto\Downloads\Archivo 0008 SD\Microsoft Office 2007 Portable.exe    1
C:\Users\Humberto\Downloads\Archivo 0008 SD\Office2007Portable\App\Office2007\WINWORD.EXE  24
Microsoft.AutoGenerated.{19EC9782-4EDE-C19F-08F2-3A612CECFE68}                    3
Microsoft.Windows.Photos_8wekyb3d8bbwe!App                                        48
C:\Users\Humberto\Downloads\microsoft office\Office2007Portable\App\Office2007\WINWORD.EXE  10
C:\Users\Humberto\Downloads\CONTROL\control\Selfishnet win 7\Selfishnet win 7\SelfishNetv0.2-beta_vista.exe  4
C:\Users\Humberto\Downloads\PRO2016\PRO2016\Windows-ISO-Downloader.exe            4
{6D809377-6AF0-444B-8957-A3773F02200E}\Common Files\microsoft shared\ClickToRun\OfficeC2RClient.exe  4
Microsoft.Office.POWERPNT.EXE.15                                                  39
Microsoft.Office.WINWORD.EXE.15                                                   211
Microsoft.AutoGenerated.{29591C0F-7C09-B655-C0EB-8544FCA7D1DE}                    15
GitForWindows.Bash                                                                264
*PID00001ffc                                                                      1
com.squirrel.WhatsApp.WhatsApp                                                    69
{1AC14E77-02E7-4E5D-B744-2EB1AE5198B7}\WindowsPowerShell\v1.0\PowerShell_ISE.exe  18
C:\Users\Humberto\AppData\Local\Temp\{C303787F-CA34-4DE8-978B-B0D492A79917}\.cr\python-3.9.2-amd64.exe  7
C:\Users\Humberto\AppData\Local\Temp\{53987328-DC0C-475C-8C95-F36ABC7C5D89}\.cr\python-3.9.2-amd64.exe  1
Microsoft.Windows.WindowsInstaller                                                1
Microsoft.Windows.ControlPanel                                                    6
Microsoft.ZuneVideo_8wekyb3d8bbwe!Microsoft.ZuneVideo                             3
Microsoft.AutoGenerated.{2CC6AFAE-BB7B-9AB0-E768-DC46B49F88D7}                    2
Microsoft.SkyDrive.Desktop                                                        1
C:\Users\Humberto\Downloads\nmap-7.91-setup.exe                                   5
*PID0000187c                                                                      1
C:\Users\Humberto\AppData\Local\Temp\nsoB372.tmp\npcap-1.00.exe                   1
{7C5A40EF-A0FB-4BFC-874A-C0F2E0B9FA8E}\Nmap\zenmap.exe                            3

***ShowJumpView values***
microsoft.windowscommunicationsapps_8wekyb3d8bbwe!microsoft.windowslive.mail      1
Microsoft.WindowsStore_8wekyb3d8bbwe!App                                          1
C:\Users\Humberto\AppData\Local\NVIDIA Corporation\GeForceNOW\CEF\GeForceNOW.exe  4
com.squirrel.Discord.Discord                                                      3
Microsoft.AutoGenerated.{19EC9782-4EDE-C19F-08F2-3A612CECFE68}                    1
{7C5A40EF-A0FB-4BFC-874A-C0F2E0B9FA8E}\Steam\steamapps\common\Left 4 Dead 2\left4dead2.exe  1
Valve.Steam.Client                                                                1
C:\Users\Humberto\Downloads\CONTROL\control\Selfishnet win 7\Selfishnet win 7\SelfishNetv0.2-beta_vista.exe  2
Microsoft.Office.WINWORD.EXE.15                                                   1
Microsoft.Windows.Photos_8wekyb3d8bbwe!App                                        2
MSEdge                                                                            1

***TrayButtonClicked values***
StartButton                                                                       366
SearchBox                                                                         88
ShowDesktopButton                                                                 93
ClockButton                                                                       9
NotificationCenterButton                                                          1

----------------------------------------
[-] SOFTWARE\HeidiSQL not found.
[-] SOFTWARE\HeidiSQL\Servers not found.

----------------------------------------
identities v.20200525
(NTUSER.DAT) Extracts values from Identities key; NTUSER.DAT

Identities not found.

----------------------------------------
injectdll64 v.20200427
(NTUSER.DAT, Software) Retrieve values set to weaken Chrome security

Software\Policies\Google\Chrome\CertificateTransparencyEnforcementDisabledForUrls not found.
Policies\Google\Chrome\CertificateTransparencyEnforcementDisabledForUrls not found.
----------------------------------------
jumplistdata v.20200517
Gets contents of user's JumpListData key

2021-05-01 04:50:03Z  com.squirrel.Teams.Teams
----------------------------------------
knowndev v.20200515
(NTUSER.DAT) Gets user's KnownDevices key contents

KnownDevices
Software\Microsoft\Windows\CurrentVersion\Explorer\AutoplayHandlers\KnownDevices
LastWrite Time 2021-02-03 01:55:42Z

WpdDeviceHandler_{671731D7-D04E-51ED-9306-877B37C7E952}  2021-02-03 01:55:42Z
Label: Sandra Mtz♡

WpdDeviceHandler_{71A82335-56B8-53F7-8448-7B0C5A32CBFC}  2021-01-07 18:41:38Z
Label: Galaxy S6 edge beto

----------------------------------------
listsoft v.20200517
(NTUSER.DAT) Lists contents of user's Software key

List the contents of the Software key in the NTUSER.DAT hive
file, in order by LastWrite time.

2021-05-01 04:50:01Z 	Microsoft
2021-05-01 02:59:37Z 	RegisteredApplications
2021-04-23 06:10:01Z 	Nmap
2021-03-30 06:53:17Z 	NVIDIA Corporation
2021-03-06 00:16:18Z 	Python
2021-02-16 01:42:47Z 	IM Providers
2021-02-14 09:45:47Z 	Netscape
2021-02-14 09:45:47Z 	ODBC
2021-01-07 23:25:20Z 	Discord
2021-01-07 18:44:12Z 	WinRAR
2020-12-25 06:39:16Z 	Valve
2020-12-25 06:16:04Z 	Epic Games
2020-12-25 06:16:04Z 	Khronos
2020-12-23 06:40:38Z 	WinRAR SFX
2020-12-17 05:30:25Z 	Chromium
2020-12-17 05:02:51Z 	Intel
2020-12-17 05:01:07Z 	AppDataLow
2020-12-17 05:01:05Z 	Wow6432Node
2020-12-17 05:00:47Z 	Google
2020-12-17 05:00:47Z 	Policies
----------------------------------------
load v.20200517
(NTUSER.DAT) Gets load and run values from user hive

load
Software\Microsoft\Windows NT\CurrentVersion\Windows
LastWrite Time 2020-12-17 05:19:38Z

load value not found.
run value not found.
----------------------------------------
logonstats v.20200517
Gets contents of user's LogonStats key

FirstLogonTime                     :  Thu Dec 17 05:01:05 2020
FirstLogonTimeOnCurrentInstallation:  Thu Dec 17 05:01:05 2020
----------------------------------------
lxss v.20200511
(NTUSER.DAT) Gets WSL config.

Software\Microsoft\Windows\CurrentVersion\Lxss not found.
----------------------------------------
mixer v.20200517
(NTUSER.DAT) Checks user's audio mixer settings

LastWrite Time, App, Device GUID
2020-12-23 06:24:52Z,#,\\?\hdaudio#func_01&ven_10ec&dev_0662&subsys_17aa3077&rev_1001#{6994ad04-93ef-11d0-a3cc-00a0c9223196}\espeakertopo/00010001
2021-02-14 10:04:17Z,\Device\HarddiskVolume3\Program Files (x86)\Microsoft Office\root\Office16\POWERPNT.EXE,\\?\hdaudio#func_01&ven_10ec&dev_0662&subsys_17aa3077&rev_1001#{6994ad04-93ef-11d0-a3cc-00a0c9223196}\eduplicatedhplineouttopo/00010001
2020-12-17 05:08:50Z,#,\\?\hdaudio#func_01&ven_10ec&dev_0662&subsys_17aa3077&rev_1001#{6994ad04-93ef-11d0-a3cc-00a0c9223196}\eduplicatedhplineouttopo/00010001
2021-04-17 20:58:22Z,\Device\HarddiskVolume3\Users\Humberto\AppData\Local\WhatsApp\app-2.2110.10\WhatsApp.exe,\\?\hdaudio#func_01&ven_10ec&dev_0662&subsys_17aa3077&rev_1001#{6994ad04-93ef-11d0-a3cc-00a0c9223196}\eduplicatedhplineouttopo/00010001
2021-01-07 23:14:30Z,\Device\HarddiskVolume3\Users\Humberto\AppData\Local\Microsoft\Teams\current\Teams.exe,\\?\hdaudio#func_01&ven_10ec&dev_0662&subsys_17aa3077&rev_1001#{6994ad04-93ef-11d0-a3cc-00a0c9223196}\eduplicatedhplineouttopo/00010001
2021-01-07 23:22:53Z,\Device\HarddiskVolume3\Users\Humberto\AppData\Local\Discord\app-0.0.309\Discord.exe,\\?\hdaudio#func_01&ven_10ec&dev_0662&subsys_17aa3077&rev_1001#{6994ad04-93ef-11d0-a3cc-00a0c9223196}\eduplicatedhplineouttopo/00010001
2021-02-14 09:59:59Z,\Device\HarddiskVolume3\Windows\System32\conhost.exe,\\?\hdaudio#func_01&ven_10ec&dev_0662&subsys_17aa3077&rev_1001#{6994ad04-93ef-11d0-a3cc-00a0c9223196}\eduplicatedhplineouttopo/00010001
2020-12-25 10:50:10Z,\Device\HarddiskVolume3\Program Files (x86)\Steam\bin\cef\cef.win7\steamwebhelper.exe,\\?\hdaudio#func_01&ven_10ec&dev_0662&subsys_17aa3077&rev_1001#{6994ad04-93ef-11d0-a3cc-00a0c9223196}\eduplicatedhplineouttopo/00010001
2021-01-07 23:22:53Z,\Device\HarddiskVolume3\Users\Humberto\AppData\Local\Discord\app-0.0.309\Discord.exe,\\?\hdaudio#func_01&ven_10ec&dev_0662&subsys_17aa3077&rev_1001#{6994ad04-93ef-11d0-a3cc-00a0c9223196}\espeakertopo/00010001
2020-12-25 15:22:56Z,\Device\HarddiskVolume3\Program Files (x86)\Steam\steam.exe,\\?\hdaudio#func_01&ven_10ec&dev_0662&subsys_17aa3077&rev_1001#{6994ad04-93ef-11d0-a3cc-00a0c9223196}\eduplicatedhplineouttopo/00010001
2021-04-23 07:56:24Z,\Device\HarddiskVolume3\Users\Humberto\AppData\Local\WhatsApp\app-2.2114.8\WhatsApp.exe,\\?\hdaudio#func_01&ven_10ec&dev_0662&subsys_17aa3077&rev_1001#{6994ad04-93ef-11d0-a3cc-00a0c9223196}\eduplicatedhplineouttopo/00010001
2020-12-25 15:22:56Z,\Device\HarddiskVolume3\Program Files (x86)\Steam\steam.exe,\\?\hdaudio#func_01&ven_10ec&dev_0662&subsys_17aa3077&rev_1001#{6994ad04-93ef-11d0-a3cc-00a0c9223196}\espeakertopo/00010001
2021-02-06 05:24:06Z,\Device\HarddiskVolume3\Program Files (x86)\Steam\bin\cef\cef.win7x64\steamwebhelper.exe,\\?\hdaudio#func_01&ven_10ec&dev_0662&subsys_17aa3077&rev_1001#{6994ad04-93ef-11d0-a3cc-00a0c9223196}\eduplicatedhplineouttopo/00010001
2021-04-23 20:28:42Z,\Device\HarddiskVolume3\Users\Humberto\AppData\Local\WhatsApp\app-2.2114.9\WhatsApp.exe,\\?\hdaudio#func_01&ven_10ec&dev_0662&subsys_17aa3077&rev_1001#{6994ad04-93ef-11d0-a3cc-00a0c9223196}\eduplicatedhplineouttopo/00010001
2021-02-26 12:26:34Z,\Device\HarddiskVolume3\Users\Humberto\AppData\Local\WhatsApp\app-2.2104.10\WhatsApp.exe,\\?\hdaudio#func_01&ven_10ec&dev_0662&subsys_17aa3077&rev_1001#{6994ad04-93ef-11d0-a3cc-00a0c9223196}\eduplicatedhplineouttopo/00010001
2021-04-19 05:02:22Z,\Device\HarddiskVolume3\Users\Humberto\AppData\Local\WhatsApp\app-2.2112.10\WhatsApp.exe,\\?\hdaudio#func_01&ven_10ec&dev_0662&subsys_17aa3077&rev_1001#{6994ad04-93ef-11d0-a3cc-00a0c9223196}\eduplicatedhplineouttopo/00010001
2020-12-17 05:09:09Z,\Device\HarddiskVolume3\Program Files (x86)\Microsoft\Edge\Application\msedge.exe,\\?\hdaudio#func_01&ven_10ec&dev_0662&subsys_17aa3077&rev_1001#{6994ad04-93ef-11d0-a3cc-00a0c9223196}\eduplicatedhplineouttopo/00010001
2020-12-17 05:34:44Z,\Device\HarddiskVolume3\Users\Humberto\AppData\Local\NVIDIA Corporation\GeForceNOW\CEF\GeForceNOW.exe,\\?\hdaudio#func_01&ven_10ec&dev_0662&subsys_17aa3077&rev_1001#{6994ad04-93ef-11d0-a3cc-00a0c9223196}\eduplicatedhplineouttopo/00010001
2020-12-25 06:39:24Z,\Device\HarddiskVolume3\Program Files (x86)\Steam\steamapps\common\Left 4 Dead 2\left4dead2.exe,\\?\hdaudio#func_01&ven_10ec&dev_0662&subsys_17aa3077&rev_1001#{6994ad04-93ef-11d0-a3cc-00a0c9223196}\eduplicatedhplineouttopo/00010001
2021-01-08 00:00:42Z,\Device\HarddiskVolume3\Users\Humberto\AppData\Local\Microsoft\Teams\current\Teams.exe,\\?\hdaudio#func_01&ven_10ec&dev_0662&subsys_17aa3077&rev_1001#{6994ad04-93ef-11d0-a3cc-00a0c9223196}\espeakertopo/00010001
2021-04-25 05:28:34Z,\Device\HarddiskVolume3\Users\Humberto\AppData\Local\Discord\app-1.0.9001\Discord.exe,\\?\hdaudio#func_01&ven_10ec&dev_0662&subsys_17aa3077&rev_1001#{6994ad04-93ef-11d0-a3cc-00a0c9223196}\espeakertopo/00010001
2020-12-25 06:39:24Z,\Device\HarddiskVolume3\Program Files (x86)\Steam\steamapps\common\Left 4 Dead 2\left4dead2.exe,\\?\hdaudio#func_01&ven_10ec&dev_0662&subsys_17aa3077&rev_1001#{6994ad04-93ef-11d0-a3cc-00a0c9223196}\espeakertopo/00010001
2021-03-06 23:25:37Z,\Device\HarddiskVolume3\Users\Humberto\AppData\Local\WhatsApp\app-2.2106.10\WhatsApp.exe,\\?\hdaudio#func_01&ven_10ec&dev_0662&subsys_17aa3077&rev_1001#{6994ad04-93ef-11d0-a3cc-00a0c9223196}\eduplicatedhplineouttopo/00010001
2021-04-25 05:28:34Z,\Device\HarddiskVolume3\Users\Humberto\AppData\Local\Discord\app-1.0.9001\Discord.exe,\\?\hdaudio#func_01&ven_10ec&dev_0662&subsys_17aa3077&rev_1001#{6994ad04-93ef-11d0-a3cc-00a0c9223196}\eduplicatedhplineouttopo/00010001
----------------------------------------
mmc v.20200517
(NTUSER.DAT) Get contents of user's MMC\Recent File List key

MMC - Recent File List
Software\Microsoft\Microsoft Management Console\Recent File List
LastWrite Time 2021-01-21 19:53:18Z
  File1 -> C:\Windows\system32\taskschd.msc
  File2 -> C:\Windows\system32\diskmgmt.msc
----------------------------------------
mmo v.20200517
(NTUSER.DAT) Checks NTUSER for Multimedia\Other values [malware]

Software\Microsoft\Multimedia\Other not found.
Software\Microsoft\CTF\LangBarAddIn not found.
----------------------------------------
mndmru v.20200517
(NTUSER.DAT) Get contents of user's Map Network Drive MRU

Software\Microsoft\Windows\CurrentVersion\Explorer\Map Network Drive MRU not found.
----------------------------------------
mp2 v.20200526
(NTUSER.DAT) Gets user's MountPoints2 key contents

MountPoints2
Software\Microsoft\Windows\CurrentVersion\Explorer\MountPoints2
LastWrite Time 2021-02-14 09:38:15Z

Remote Drives:

Volumes:
2021-05-01 04:38:54Z
  {ee8ba47c-4023-11eb-ae02-cc52af45ecb7}
2021-02-14 09:38:15Z
  {26cb0ff3-6d5f-11eb-ae10-cc52af45ecb7}
2020-12-17 07:50:07Z
  {ee8ba367-4023-11eb-ae02-cc52af45ecb7}
2020-12-17 07:48:12Z
  {ee8ba36a-4023-11eb-ae02-cc52af45ecb7}
2020-12-17 07:37:14Z
  {6aadb7b2-edf7-4962-a559-21879b392eda}

Drives:
2020-12-17 05:01:05Z - CPC

Unique MAC Addresses:
CC:52:AF:45:EC:B7
21:87:9B:39:2E:DA

Analysis Tip: Correlate the Volume entries to those found in the MountedDevices
entries that begin with "\??\Volume".
----------------------------------------
mpmru v.20200517
(NTUSER.DAT) Gets user's Media Player RecentFileList values

Software\Microsoft\MediaPlayer\Player\RecentFileList not found.
----------------------------------------
msoffice v.20200518

Office Identities
JOSE HUMBERTO MARTINEZ PENA (jose.martinezpena@uanl.edu.mx)


Word - File MRU

Word\User MRU\ADAL_4EC8F560F93B382CC9FFAF7FB8C6B39CEC2AFEB486417AC4A1F8BA6A0C77B329 - File MRU
Word - Place MRU

Word\User MRU\ADAL_4EC8F560F93B382CC9FFAF7FB8C6B39CEC2AFEB486417AC4A1F8BA6A0C77B329 - Place MRU
PowerPoint - TrustRecords
2021-02-22 15:57:57Z: %USERPROFILE%/Downloads/Mind-Map-Templates-Widescreen/Mind-Map-Templates-Showeet(widescreen).pptx

PowerPoint - File MRU

PowerPoint\User MRU\ADAL_4EC8F560F93B382CC9FFAF7FB8C6B39CEC2AFEB486417AC4A1F8BA6A0C77B329 - File MRU
PowerPoint - Place MRU

PowerPoint\User MRU\ADAL_4EC8F560F93B382CC9FFAF7FB8C6B39CEC2AFEB486417AC4A1F8BA6A0C77B329 - Place MRU


Word - Reading Locations
2021-04-23 20:42:04Z: C:\Users\Humberto\Downloads\regex (1).docx (2021-04-23T15:42)
2021-04-27 19:46:48Z: C:\Users\Humberto\Desktop\PORTADA.docx (2021-04-27T14:46)
2021-03-16 04:01:37Z: C:\Users\Humberto\Desktop\mate discretas\tarea 3 lab.docx (2021-03-15T22:01)
2021-03-19 15:54:03Z: C:\Users\Humberto\Desktop\Guía de estudio para el examen parcial # 1.docx (2021-03-19T09:54)
2021-03-19 15:51:10Z: C:\Users\Humberto\Downloads\regex.docx (2021-03-19T09:51)

----------------------------------------
muicache v.20200525
(NTUSER.DAT,USRCLASS.DAT) Gets EXEs from user's MUICache key

Software\Microsoft\Windows\ShellNoRoam\MUICache not found.

Local Settings\Software\Microsoft\Windows\Shell\MUICache not found.
----------------------------------------
nation v.20200517
(ntuser.dat) Gets region information from HKCU

Nation Information Check
Control Panel\International\Geo
LastWrite time: 2020-12-17 05:00:47Z

The Region value is : 166
The Country Is: Mexico
For more information please visit the link below:
https://msdn.microsoft.com/en-us/library/aa723531.aspx

----------------------------------------
oisc v.20091125
(NTUSER.DAT) Gets contents of user's Office Internet Server Cache

Office Version: 16.0
https://uanledu.sharepoint.com/sites/Section_02305010133402031420000101010009/Archivos%20de%20clase/Asignaciones/Tarea%201.%20Identificación%20del%20Alumno/
LastWrite time: 2021-02-22 15:58:09Z

----------------------------------------
onedrive v.20200515
(NTUSER.DAT) Gets contents of user's OneDrive key

Software\Microsoft\OneDrive
UserFolder                : C:\Users\Humberto\OneDrive
----------------------------------------
OSVersion
Software\Microsoft
LastWrite Time 2021-05-01 04:50:01Z

OSVersion value not found.
----------------------------------------
outlookhomepage v.20201002
(NTUSER.DAT, Software) Retrieve values set to attack Outlook WebView Homepage

Looking for webview homepage modifications. If this value is pointing
to a URL outside the corporate domain it may be a malicious site.

Looking for key values associated with security.
If you see:
[Example]  EnableRoamingFolderHomepages : 1
[Example]  NonDefaultStoreScript : 1
[Example]  EnableUnsafeClientMailRules : 1
You may have a security vulnerability that allows attackers to hijack the URL

----------------------------------------
pendinggpos v.20200427
NTUSER.DAT - Gets contents of user's PendingGPOs key

Software\Microsoft\IEAK\GroupPolicy\PendingGPOs not found.
----------------------------------------
profiler v.20200525
(NTUSER.DAT, System) Environment profiler information

Environment
LastWrite Time 2021-04-28 23:25:20Z

Path -> C:\Users\Humberto\AppData\Local\Programs\Python\Python39\Scripts\;C:\Users\Humberto\AppData\Local\Programs\Python\Python39\;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;C:\Program Files (x86)\Nmap
TEMP -> %USERPROFILE%\AppData\Local\Temp
TMP -> %USERPROFILE%\AppData\Local\Temp
OneDrive -> C:\Users\Humberto\OneDrive

----------------------------------------
pslogging v.20200515
(NTUSER.DAT, Software) Extracts PowerShell logging settings

Software\Policies\Microsoft\Windows\PowerShell not found.
Policies\Microsoft\Windows\PowerShell not found.
----------------------------------------
----------------------------------------
putty v.20200515
(NTUSER.DAT) Extracts the saved SshHostKeys for PuTTY.

Software\SimonTatham\PuTTY\SshHostKeys not found.

----------------------------------------
recentapps v.20200515
- Gets contents of user's RecentApps key

Software\Microsoft\Windows\CurrentVersion\Search\RecentApps not found.
----------------------------------------
recentdocs v.20200427
(NTUSER.DAT) Gets contents of user's RecentDocs key

RecentDocs
**All values printed in MRUList\MRUListEx order.
Software\Microsoft\Windows\CurrentVersion\Explorer\RecentDocs
LastWrite Time: 2021-05-01 04:21:12Z
  21 = rr_2.02.zip
  4 = Descargas
  5 = RegistryExplorer_RECmd.zip
  23 = Internet
  1 = ms-gamingoverlay:///
  89 = kglcheck/
  7 = ?TitleId=1643113131&ProcessId=3760&WindowId=131382
  2 = ?TitleId=1643113131&ProcessId=1828&WindowId=131600
  3 = ?TitleId=1643113131&ProcessId=4900&WindowId=131746
  67 = algebra
  17 = 1645681_humberto.martinez_4PTopAl14.pdf
  113 = PORTADA.docx
  8 = 20210427_144155.jpg
  134 = ?TitleId=1643113131&ProcessId=5708&WindowId=66252
  19 = HUMBERT (D:)
  20 = Doc1.pdf
  15 = WhatsApp Image 2021-04-23 at 8.28.07 AM (1).jpeg
  41 = SORTEO TEC.pdf
  18 = instrucciones (1).pdf
  16 = regex (1).docx
  14 = Imágenes
  13 = WhatsApp Image 2021-04-23 at 8.28.07 AM.jpeg
  0 = ms-gamingoverlay:///
  10 = practica6.sh
  12 = practica33.sh
  11 = practica3.sh
  132 = practica66.txt
  149 = ftp.py
  148 = practica6
  147 = codnmap.txt
  145 = nmap.txt
  146 = nmap64.py
  144 = Nuevo documento de texto.txt
  143 = Meeting in _General_-20210417_122918-Grabación de la reunión.mp4
  142 = ?TitleId=1643113131&ProcessId=6480&WindowId=197012
  141 = ?TitleId=1643113131&ProcessId=6824&WindowId=328236
  42 = mate discretas
  140 = Tarea 4  lab mate discretas.pdf
  139 = 20210420_234823.jpg
  137 = 2do examen parcial.pdf
  133 = MATEMATICAS_DISCRETAS_Richard_Johnsonbau (1).pdf
  138 = ?TitleId=1643113131&ProcessId=5384&WindowId=66354
  136 = 20210420_095237.jpg
  128 = practica2
  131 = practica2.PY
  130 = humberto.PY
  129 = PI.PY
  94 = practica5
  95 = practica5.py
  6 = calculo integral
  127 = Humberto_martinez_032_derivar función Logaritmo Natural compuesta.pdf
  126 = 20210417_235303.jpg
  125 = ?TitleId=1643113131&ProcessId=660&WindowId=328074
  124 = ?TitleId=1643113131&ProcessId=6916&WindowId=66210
  123 = ?TitleId=1643113131&ProcessId=3640&WindowId=66296
  122 = llave.txt
  120 = encriptar y desencriptar.py
  121 = tareaASiNCRONA.py
  119 = 1645681_humberto.martinez_3PTopAl14.pdf
  9 = 20210415_115152.jpg
  117 = ?TitleId=1643113131&ProcessId=5572&WindowId=66206
  118 = ?TitleId=1643113131&ProcessId=696&WindowId=131798
  116 = ?TitleId=1643113131&ProcessId=5456&WindowId=66296
  115 = ?TitleId=1643113131&ProcessId=3816&WindowId=655452
  114 = ?TitleId=1643113131&ProcessId=2348&WindowId=459512
  112 = ?TitleId=1643113131&ProcessId=688&WindowId=197348
  111 = ?TitleId=1643113131&ProcessId=4532&WindowId=458830
  110 = ?TitleId=1643113131&ProcessId=3468&WindowId=197350
  105 = ?TitleId=1643113131&ProcessId=7064&WindowId=131430
  106 = ?TitleId=1643113131&ProcessId=6888&WindowId=131694
  107 = ?TitleId=1643113131&ProcessId=5000&WindowId=66336
  92 = listado_03abr2021.pdf
  109 = ?TitleId=1643113131&ProcessId=3116&WindowId=196852
  108 = ?TitleId=1643113131&ProcessId=6364&WindowId=66224
  104 = ?TitleId=1643113131&ProcessId=6112&WindowId=393972
  103 = Archivos de programa (x86)
  101 = Steam
  100 = IMAGENES
  102 = racismo.bmp
  99 = racismo.jpeg
  98 = ?TitleId=1643113131&ProcessId=4896&WindowId=66304
  97 = ?TitleId=1643113131&ProcessId=4624&WindowId=459378
  135 = ?TitleId=1643113131&ProcessId=6656&WindowId=131382
  53 = practicaa4
  96 = practica1.txt
  93 = ?TitleId=1643113131&ProcessId=6912&WindowId=197222
  91 = ?TitleId=1643113131&ProcessId=4264&WindowId=66358
  90 = ?TitleId=1643113131&ProcessId=1284&WindowId=197364
  88 = ?TitleId=1643113131&ProcessId=3584&WindowId=66340
  87 = ?TitleId=1643113131&ProcessId=2552&WindowId=66292
  86 = practica4
  85 = practica4.py
  78 = prueba2.py
  84 = msg.txt
  83 = prueba21.py
  82 = Meeting in _General_-20210313_122613-Grabación de la reunión.mp4
  81 = prueba20.py
  80 = Nueva carpeta
  29 = perfect.py
  34 = prueba.py
  76 = prueba1.py
  79 = prueba10.py
  77 = decoding.py
  73 = socket_humberto_mtz_1645681.py
  75 = ?TitleId=1643113131&ProcessId=4720&WindowId=197346
  74 = ?TitleId=1643113131&ProcessId=5576&WindowId=131476
  72 = socket.py
  71 = ?TitleId=1643113131&ProcessId=1788&WindowId=263092
  70 = ?TitleId=1643113131&ProcessId=5508&WindowId=197744
  69 = ?TitleId=1643113131&ProcessId=6004&WindowId=131802
  68 = 1645681_humberto.martinez_2PTopAl14.pdf
  40 = 20210323_120358.jpg
  65 = practica3
  66 = humbertoscript.sh
  63 = script.sh
  64 = Meeting in _General_-20210306_124048-Grabación de la reunión.mp4
  56 = Guía de estudio para el examen parcial # 1.docx
  62 = Guía de estudio para el examen parcial # 1.pdf
  61 = regex.docx
  60 = 1er examen parcial.pdf
  59 = 20210319_093730.jpg
  55 = ?TitleId=1643113131&ProcessId=3064&WindowId=131894
  54 = ?TitleId=1643113131&ProcessId=4248&WindowId=66366
  52 = Programas
  51 = ::{7B81BE6A-CE2B-4676-A29E-EB907A5126C5}
  50 = Sistema y seguridad
  49 = ::{BB06C0E4-D293-4F75-8A90-CB05B6477EEE}
  48 = ?TitleId=1643113131&ProcessId=7264&WindowId=197344
  47 = ::{F2DDFC82-8F12-4CDD-B7DC-D4FE1425AA4D}
  46 = sound
  45 = ?TitleId=1643113131&ProcessId=6104&WindowId=66332
  43 = tarea 3 lab.docx
  44 = tarea 3 lab.pdf
  39 = 20210315_210035.jpg
  58 = Hardware y sonido
  57 = ::{025A5937-A6BE-4686-A844-36FE4BEC8B6D}
  38 = ?TitleId=1643113131&ProcessId=8624&WindowId=131930
  36 = ?TitleId=1643113131&ProcessId=5824&WindowId=131362
  37 = ?TitleId=1643113131&ProcessId=9036&WindowId=196684
  35 = 20000.bmp
  33 = 20000.jpg
  31 = rayados-de-monterrey-escudo.jpg
  32 = rayados-de-monterrey-escudo.bmp
  30 = ?TitleId=1643113131&ProcessId=5924&WindowId=197342
  28 = ?TitleId=1643113131&ProcessId=9000&WindowId=786580
  27 = ?TitleId=1643113131&ProcessId=2984&WindowId=721746
  26 = ?TitleId=1643113131&ProcessId=7784&WindowId=262494
  25 = ?TitleId=1643113131&ProcessId=4840&WindowId=66392
  24 = ?TitleId=1643113131&ProcessId=2988&WindowId=131798
  22 = ?TitleId=1643113131&ProcessId=4964&WindowId=66324

Software\Microsoft\Windows\CurrentVersion\Explorer\RecentDocs\.bmp
LastWrite Time 2021-04-05 09:27:35Z
MRUListEx = 5,4,3,2,1,0
  5 = racismo.bmp
  4 = 20000.bmp
  3 = rayados-de-monterrey-escudo.bmp
  2 = no.bmp
  1 = Mexico.bmp
  0 = valve.bmp

Software\Microsoft\Windows\CurrentVersion\Explorer\RecentDocs\.docx
LastWrite Time 2021-04-27 19:49:57Z
MRUListEx = 0,5,3,4,2,1
  0 = PORTADA.docx
  5 = regex (1).docx
  3 = Guía de estudio para el examen parcial # 1.docx
  4 = regex.docx
  2 = tarea 3 lab.docx
  1 = Ecuaciones Diferenciales de Variables Separables.docx

Software\Microsoft\Windows\CurrentVersion\Explorer\RecentDocs\.dotx
LastWrite Time 2021-02-16 02:09:19Z
MRUListEx = 0
  0 = Identificacion Alumno humberto mtz.dotx

Software\Microsoft\Windows\CurrentVersion\Explorer\RecentDocs\.exe&url=aHR0cHM6Ly93d3cuZmlsZWluc3BlY3QuY29tL2ZpbGVpbmZvL2dpdC1yZW1vdGUtaHR0cHMtZXhlLw==&form=WSBBST&cvid=b8cc0c40ba1c40a09403bba0791aa7c4&rtk=rmp5N+sz3Vcbb5+Zj2q08inhOfrO814m2KyrAc4bHM66QAZbAZcWoarmpCycdO76
LastWrite Time 2021-04-03 07:01:44Z
MRUListEx = 

Software\Microsoft\Windows\CurrentVersion\Explorer\RecentDocs\.html
LastWrite Time 2021-01-29 16:21:18Z
MRUListEx = 1,0
  1 = SERVICIOS DE SALUD DE NUEVO LEON.html
  0 = Catarata Palouse.html

Software\Microsoft\Windows\CurrentVersion\Explorer\RecentDocs\.jpeg
LastWrite Time 2021-04-23 22:09:25Z
MRUListEx = 10,9,8,5,6,7,4,3,1,0,2
  10 = WhatsApp Image 2021-04-23 at 8.28.07 AM (1).jpeg
  9 = WhatsApp Image 2021-04-23 at 8.28.07 AM.jpeg
  8 = racismo.jpeg
  5 = WhatsApp Image 2021-02-10 at 1.00.24 PM (1).jpeg
  6 = WhatsApp Image 2021-02-10 at 1.00.24 PM (2).jpeg
  7 = WhatsApp Image 2021-02-10 at 1.05.54 PM.jpeg
  4 = WhatsApp Image 2021-02-10 at 1.00.24 PM.jpeg
  3 = WhatsApp Image 2021-02-10 at 1.00.25 PM.jpeg
  1 = WhatsApp Image 2021-02-10 at 12.52.05 PM.jpeg
  0 = WhatsApp Image 2021-02-10 at 12.52.06 PM (1).jpeg
  2 = WhatsApp Image 2021-02-10 at 12.52.06 PM.jpeg

Software\Microsoft\Windows\CurrentVersion\Explorer\RecentDocs\.jpg
LastWrite Time 2021-04-27 19:45:04Z
MRUListEx = 19,18,17,5,16,15,14,13,12,11,10,9,8,7,6,4,3,2,1,0
  19 = 20210427_144155.jpg
  18 = 20210420_234823.jpg
  17 = 20210420_095237.jpg
  5 = 20210417_235303.jpg
  16 = 20210415_115152.jpg
  15 = 20210323_120358.jpg
  14 = 20210319_093730.jpg
  13 = 20210315_210035.jpg
  12 = 20000.jpg
  11 = rayados-de-monterrey-escudo.jpg
  10 = IMG-20210308-WA0063.jpg
  9 = 20210308_160543.jpg
  8 = 20210308_110300.jpg
  7 = 20210226_120347.jpg
  6 = no.jpg
  4 = 20210207_215014.jpg
  3 = 20210207_215007.jpg
  2 = _01 PC.jpg
  1 = valve.jpg
  0 = 451329.jpg

Software\Microsoft\Windows\CurrentVersion\Explorer\RecentDocs\.mp4
LastWrite Time 2021-04-23 04:40:06Z
MRUListEx = 5,4,3,2,1,0
  5 = Meeting in _General_-20210417_122918-Grabación de la reunión.mp4
  4 = Meeting in _General_-20210313_122613-Grabación de la reunión.mp4
  3 = Meeting in _General_-20210306_124048-Grabación de la reunión.mp4
  2 = Reunión-20210225_140958-Meeting Recording.mp4
  1 = lab de progra.mp4
  0 = General-20210213_182858-Meeting Recording.mp4

Software\Microsoft\Windows\CurrentVersion\Explorer\RecentDocs\.pdf
LastWrite Time 2021-04-27 19:50:18Z
MRUListEx = 13,8,6,7,11,5,4,10,3,2,1,0,19,18,17,16,15,14,12,9
  13 = 1645681_humberto.martinez_4PTopAl14.pdf
  8 = Doc1.pdf
  6 = SORTEO TEC.pdf
  7 = instrucciones (1).pdf
  11 = Tarea 4  lab mate discretas.pdf
  5 = 2do examen parcial.pdf
  4 = MATEMATICAS_DISCRETAS_Richard_Johnsonbau (1).pdf
  10 = Humberto_martinez_032_derivar función Logaritmo Natural compuesta.pdf
  3 = 1645681_humberto.martinez_3PTopAl14.pdf
  2 = listado_03abr2021.pdf
  1 = 1645681_humberto.martinez_2PTopAl14.pdf
  0 = Guía de estudio para el examen parcial # 1.pdf
  19 = 1er examen parcial.pdf
  18 = tarea 3 lab.pdf
  17 = EXamen_calculo_integral_humberto_mtz.pdf
  16 = 1er Ex. Parcial_Integral Definida e Indefinida_8 marzo.pdf
  15 = Lab_1_humberto_martinez_1645681.pdf
  14 = PORTADA.pdf
  12 = 1645681_Humberto.Martinez_1PTopAl14.pdf
  9 = Git basico Humberto martinez.pdf

Software\Microsoft\Windows\CurrentVersion\Explorer\RecentDocs\.png
LastWrite Time 2021-01-29 21:26:47Z
MRUListEx = 1,0
  1 = Mexico.png
  0 = examen.png

Software\Microsoft\Windows\CurrentVersion\Explorer\RecentDocs\.pptx
LastWrite Time 2021-02-22 16:26:39Z
MRUListEx = 1,0
  1 = paz negativa y positiva.pptx
  0 = Mind-Map-Templates-Showeet(widescreen).pptx

Software\Microsoft\Windows\CurrentVersion\Explorer\RecentDocs\.py
LastWrite Time 2021-04-23 08:20:42Z
MRUListEx = 9,8,6,2,1,18,0,19,7,15,5,17,3,12,13,16,14,11,10,4
  9 = ftp.py
  8 = nmap64.py
  6 = practica2.PY
  2 = humberto.PY
  1 = PI.PY
  18 = practica5.py
  0 = encriptar y desencriptar.py
  19 = tareaASiNCRONA.py
  7 = practica4.py
  15 = prueba2.py
  5 = prueba21.py
  17 = prueba20.py
  3 = perfect.py
  12 = prueba.py
  13 = prueba1.py
  16 = prueba10.py
  14 = decoding.py
  11 = socket_humberto_mtz_1645681.py
  10 = socket.py
  4 = 5555.py

Software\Microsoft\Windows\CurrentVersion\Explorer\RecentDocs\.rar
LastWrite Time 2021-02-14 09:49:44Z
MRUListEx = 0
  0 = Ofice 2019 Joalgoba.rar

Software\Microsoft\Windows\CurrentVersion\Explorer\RecentDocs\.sh
LastWrite Time 2021-04-23 20:07:21Z
MRUListEx = 2,4,3,1,0
  2 = practica6.sh
  4 = practica33.sh
  3 = practica3.sh
  1 = humbertoscript.sh
  0 = script.sh

Software\Microsoft\Windows\CurrentVersion\Explorer\RecentDocs\.txt
LastWrite Time 2021-04-23 20:03:08Z
MRUListEx = 11,10,9,8,4,5,7,6,3,2,1,0
  11 = practica66.txt
  10 = codnmap.txt
  9 = nmap.txt
  8 = Nuevo documento de texto.txt
  4 = llave.txt
  5 = practica1.txt
  7 = msg.txt
  6 = ASÍNCRONA_menudeopciones_humberto martinez_1645681.txt
  3 = Resolver errores.txt
  2 = CMD x64 bits.txt
  1 = LÍNEAS CMD x64 x86 OFFICE 2016.txt
  0 = SOLUCIÓN ERRORES.txt

Software\Microsoft\Windows\CurrentVersion\Explorer\RecentDocs\.zip
LastWrite Time 2021-05-01 04:21:12Z
MRUListEx = 3,2,1,0
  3 = rr_2.02.zip
  2 = RegistryExplorer_RECmd.zip
  1 = Mind-Map-Templates-Widescreen.zip
  0 = archive.zip

Software\Microsoft\Windows\CurrentVersion\Explorer\RecentDocs\Folder
LastWrite Time 2021-05-01 04:14:12Z
MRUListEx = 2,0,17,11,4,9,14,19,13,21,20,18,16,15,3,1,12,10,8,7,5,6
  2 = Descargas
  0 = Internet
  17 = algebra
  11 = HUMBERT (D:)
  4 = Imágenes
  9 = practica1
  14 = mate discretas
  19 = practica5
  13 = calculo integral
  21 = Archivos de programa (x86)
  20 = Steam
  18 = practica4
  16 = practica3
  15 = Programas
  3 = Sistema y seguridad
  1 = Hardware y sonido
  12 = Nueva carpeta
  10 = Mind-Map-Templates-Widescreen
  8 = Ofice 2019 Joalgoba
  7 = PRO2016
  5 = Download
  6 = M4r1a-Flaca col3g.PK

----------------------------------------
run v.20200511
(Software, NTUSER.DAT) [Autostart] Get autostart key contents from Software hive

Software\Microsoft\Windows\CurrentVersion\Run
LastWrite Time 2021-03-19 19:22:17Z
  OneDrive - "C:\Users\Humberto\AppData\Local\Microsoft\OneDrive\OneDrive.exe" /background
  EpicGamesLauncher - "C:\Program Files (x86)\Epic Games\Launcher\Portal\Binaries\Win64\EpicGamesLauncher.exe" -silent
  Steam - "C:\Program Files (x86)\Steam\steam.exe" -silent
  com.squirrel.Teams.Teams - C:\Users\Humberto\AppData\Local\Microsoft\Teams\Update.exe --processStart "Teams.exe" --process-start-args "--system-initiated"

Software\Microsoft\Windows\CurrentVersion\Run has no subkeys.

Software\Wow6432Node\Microsoft\Windows\CurrentVersion\Run not found.

Software\Microsoft\Windows\CurrentVersion\RunOnce
LastWrite Time 2021-04-29 14:44:43Z
Software\Microsoft\Windows\CurrentVersion\RunOnce has no values.
Software\Microsoft\Windows\CurrentVersion\RunOnce has no subkeys.

Software\Microsoft\Windows\CurrentVersion\RunServices not found.

Software\Microsoft\Windows\CurrentVersion\RunServicesOnce not found.

Software\Microsoft\Windows NT\CurrentVersion\Terminal Server\Install\Software\Microsoft\Windows\CurrentVersion\Run not found.

Software\Microsoft\Windows NT\CurrentVersion\Terminal Server\Install\Software\Microsoft\Windows\CurrentVersion\RunOnce not found.

Software\Microsoft\Windows\CurrentVersion\Policies\Explorer\Run not found.

Software\Wow6432Node\Microsoft\Windows\CurrentVersion\Policies\Explorer\Run not found.

Software\Microsoft\Windows\CurrentVersion\StartupApproved\Run not found.

Software\Microsoft\Windows\CurrentVersion\StartupApproved\Run32 not found.

Software\Microsoft\Windows\CurrentVersion\StartupApproved\StartupFolder not found.

----------------------------------------
runmru v.20200525
(NTUSER.DAT) Gets contents of user's RunMRU key

RunMru
Software\Microsoft\Windows\CurrentVersion\Explorer\RunMRU
LastWrite Time 2020-12-17 07:30:13Z
Software\Microsoft\Windows\CurrentVersion\Explorer\RunMRU has no values.
----------------------------------------
runvirtual v.20200427
(NTUSER.DAT, Software) Gets RunVirtual entries

----------------------------------------
searchscopes v.20200517
- Gets contents of user's SearchScopes key

SearchScopes
Software\Microsoft\Internet Explorer\SearchScopes
DefaultScope: {0633EE93-D776-472f-A0FF-E1416B8B2E3A}

{0633EE93-D776-472f-A0FF-E1416B8B2E3A} [2021-01-09 02:37:06Z]
DisplayName: Bing

----------------------------------------
sevenzip v.20210329
- Gets records of histories from 7-Zip keys

Software\7-Zip not found.
Software\Wow6432Node\7-Zip not found.
----------------------------------------
shc v.20200427
(NTUSER.DAT) Gets SHC entries from user hive

Software\Microsoft\Windows\CurrentVersion\UFH\SHC
LastWrite Time 2021-04-23 06:12:22Z

0 - C:\Users\Humberto\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Nmap\Nmap - Zenmap GUI.lnk C:\Program Files (x86)\Nmap\zenmap.exe 
----------------------------------------
shellfolders v.20200515
Gets user's shell folders values

Software\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders
LastWrite Time 2020-12-17 05:01:09Z
StartUp folder : C:\Users\Humberto\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup

Software\Microsoft\Windows\CurrentVersion\Explorer\User Shell Folders
LastWrite Time 2020-12-17 05:00:47Z
StartUp folder : %USERPROFILE%\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup
----------------------------------------
speech v.20200427
(NTUSER.DAT) Get values from user's Speech key

Software\Microsoft\Speech
Voices DefaultTokenId value          : HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Speech\Voices\Tokens\TTS_MS_ES-MX_SABINA_11.0

----------------------------------------
Software\SysInternals not found.
----------------------------------------
Launching tsclient v.20200518
(NTUSER.DAT) Displays contents of user's Terminal Server Client\Default key

Software\Microsoft\Terminal Server Client\Default not found.

Software\Microsoft\Terminal Server Client\Servers not found.
----------------------------------------
typedpaths v.20200526
(NTUSER.DAT) Gets contents of user's typedpaths key

Software\Microsoft\Windows\CurrentVersion\Explorer\TypedPaths
LastWrite Time 2021-01-05 10:47:21Z

Software\Microsoft\Windows\CurrentVersion\Explorer\TypedPaths has no values.
----------------------------------------
typedurls v.20200526
(NTUSER.DAT) Returns contents of user's TypedURLs key.

TypedURLs
Software\Microsoft\Internet Explorer\TypedURLs
LastWrite Time 2020-12-17 05:01:07Z
  url1 -> http://go.microsoft.com/fwlink/p/?LinkId=255141
----------------------------------------
typedurlstime v.20200526
(NTUSER.DAT) Returns contents of user's TypedURLsTime key.

Software\Microsoft\Internet Explorer\TypedURLsTime not found.
----------------------------------------
uninstall v.20200525
(Software, NTUSER.DAT) Gets contents of Uninstall keys from Software, NTUSER.DAT hives

Uninstall
Software\Microsoft\Windows\CurrentVersion\Uninstall

2021-04-28 23:25:20Z
  Microsoft OneDrive v.21.062.0328.0001

2021-04-23 07:57:19Z
  WhatsApp v.2.2114.9

2021-04-03 05:34:04Z
  Microsoft Teams v.1.4.00.8872

2021-03-30 06:53:17Z
  NVIDIA GeForce NOW 2.0.28.140 v.2.0.28.140
  NVIDIA Install Application v.2.1002.353.0

2021-03-06 00:16:50Z
  Python 3.9.2 (64-bit) v.3.9.2150.0

2021-01-07 23:22:39Z
  Discord v.0.0.309

----------------------------------------
UserAssist
Software\Microsoft\Windows\CurrentVersion\Explorer\UserAssist
LastWrite Time 2020-12-17 05:01:06Z

{9E04CAB2-CC14-11DF-BB8C-A2F1DED72085}

Value names with no time stamps:

{A3D53349-6E61-4557-8FC7-0028EDCEEBF6}

Value names with no time stamps:

{B267E3AD-A825-4A09-82B9-EEC22AA3B847}

{BCB48336-4DDD-48FF-BB0B-D3190DACB3E2}

Value names with no time stamps:

{CAA59E3C-4792-41A5-9909-6A6A8D32490E}

Value names with no time stamps:

{CEBFF5CD-ACE2-4F4F-9178-9926F41749EA}
2021-05-01 04:34:24Z
  windows.immersivecontrolpanel_cw5n1h2txyewy!microsoft.windows.immersivecontrolpanel (2)
2021-05-01 04:21:56Z
  C:\Users\Humberto\Downloads\rr_2.02\rr.exe (2)
2021-05-01 04:21:17Z
  {6D809377-6AF0-444B-8957-A3773F02200E}\WinRAR\WinRAR.exe (2)
2021-05-01 04:19:42Z
  C:\Users\Humberto\Downloads\RegistryExplorer_RECmd\RegistryExplorer\RECmd.exe (1)
2021-05-01 03:19:34Z
  Microsoft.Windows.Explorer (16)
2021-05-01 02:26:59Z
  com.squirrel.Teams.Teams (6)
2021-04-30 08:37:35Z
  Microsoft.XboxGamingOverlay_8wekyb3d8bbwe!App (20)
2021-04-30 01:42:01Z
  steam://rungameid/550 (4)
2021-04-28 23:11:27Z
  MSEdge (10)
2021-04-27 19:45:00Z
  Microsoft.Windows.Photos_8wekyb3d8bbwe!App (2)
2021-04-27 19:41:34Z
  Microsoft.Office.WINWORD.EXE.15 (2)
2021-04-25 05:28:03Z
  com.squirrel.Discord.Discord (2)
2021-04-23 21:00:40Z
  Microsoft.AutoGenerated.{0FDD9C6B-656B-0F1F-AB08-B1CDBB7067B3} (13)
2021-04-23 20:27:58Z
  com.squirrel.WhatsApp.WhatsApp (2)
2021-04-23 20:18:15Z
  {1AC14E77-02E7-4E5D-B744-2EB1AE5198B7}\cmd.exe (4)
2021-04-23 20:03:08Z
  {1AC14E77-02E7-4E5D-B744-2EB1AE5198B7}\notepad.exe (6)
2021-04-23 08:11:46Z
  Microsoft.AutoGenerated.{6BC7CDC2-9FF1-8E1A-646B-DB1B3C444B5E} (2)
2021-04-23 07:19:46Z
  {7C5A40EF-A0FB-4BFC-874A-C0F2E0B9FA8E}\Nmap\zenmap.exe (1)
2021-04-23 06:09:28Z
  C:\Users\Humberto\Downloads\nmap-7.91-setup.exe (1)
2021-04-23 04:40:04Z
  Microsoft.ZuneVideo_8wekyb3d8bbwe!Microsoft.ZuneVideo (1)
2021-04-22 06:52:46Z
  Microsoft.AutoGenerated.{F98E97A0-DF75-E06C-7823-0DBEA41BD694} (2)
2021-04-20 14:51:51Z
  Microsoft.WindowsCalculator_8wekyb3d8bbwe!App (0)
2021-04-05 03:05:54Z
  {1AC14E77-02E7-4E5D-B744-2EB1AE5198B7}\mspaint.exe (0)
2021-04-03 04:56:56Z
  Microsoft.AutoGenerated.{2CC6AFAE-BB7B-9AB0-E768-DC46B49F88D7} (0)
2021-03-30 08:06:41Z
  {7C5A40EF-A0FB-4BFC-874A-C0F2E0B9FA8E}\Epic Games\Launcher\Portal\Binaries\Win32\EpicGamesLauncher.exe (0)
2021-03-30 08:04:03Z
  {7C5A40EF-A0FB-4BFC-874A-C0F2E0B9FA8E}\Steam\Steam.exe (0)
2021-03-20 04:10:30Z
  {1AC14E77-02E7-4E5D-B744-2EB1AE5198B7}\WindowsPowerShell\v1.0\PowerShell_ISE.exe (0)
2021-03-17 08:40:05Z
  Microsoft.Windows.ControlPanel (0)
2021-03-16 19:05:15Z
  {1AC14E77-02E7-4E5D-B744-2EB1AE5198B7}\rundll32.exe (0)
2021-03-11 06:23:09Z
  C:\Users\Humberto\Downloads\CONTROL\control\Selfishnet win 7\Selfishnet win 7\SelfishNetv0.2-beta_vista.exe (0)
2021-03-06 00:16:00Z
  C:\Users\Humberto\Downloads\python-3.9.2-amd64.exe (0)
2021-03-06 00:15:47Z
  {1AC14E77-02E7-4E5D-B744-2EB1AE5198B7}\msiexec.exe (0)
2021-03-06 00:13:58Z
  C:\Users\Humberto\AppData\Local\Programs\Python\Python39\python.exe (0)
2021-03-06 00:13:52Z
  C:\Users\Humberto\AppData\Local\Programs\Python\Python39\pythonw.exe (0)
2021-03-06 00:13:25Z
  C:\Users\Humberto\AppData\Local\Programs\Python\Launcher\pyw.exe (0)
2021-03-06 00:13:23Z
  C:\Users\Humberto\AppData\Local\Programs\Python\Launcher\py.exe (0)
2021-03-06 00:07:21Z
  C:\Users\Humberto\Downloads\python-3.9.1-amd64.exe (0)
2021-03-06 00:05:51Z
  C:\Users\Humberto\AppData\Local\Microsoft\WindowsApps\python.exe (0)
2021-03-05 23:42:06Z
  MSEdge.UserData.Default (0)
2021-02-25 16:49:09Z
  C:\Users\Humberto\AppData\Local\NVIDIA Corporation\GeForceNOW\CEF\GeForceNOW.exe (0)
2021-02-22 17:35:57Z
  Microsoft.AutoGenerated.{29591C0F-7C09-B655-C0EB-8544FCA7D1DE} (0)
2021-02-22 15:58:01Z
  Microsoft.Office.POWERPNT.EXE.15 (0)
2021-02-14 09:38:29Z
  D:\Setup.exe (0)
2021-02-14 09:24:01Z
  C:\Users\Humberto\Downloads\PRO2016\PRO2016\Windows-ISO-Downloader.exe (0)
2021-02-13 04:04:44Z
  C:\Users\Humberto\Downloads\microsoft office\Office2007Portable\Word2007Portable.exe (0)
2021-02-08 03:57:55Z
  C:\Users\Humberto\Downloads\Archivo 0008 SD\Office2007Portable\Word2007Portable.exe (0)
2021-02-05 18:57:52Z
  C:\Users\Humberto\Downloads\CONTROL\CONTROL VELOCIDAD INTERNET\Selfishnet win 7\Selfishnet win 7\SelfishNetv0.2-beta_vista.exe (0)
2021-02-03 00:56:38Z
  {1AC14E77-02E7-4E5D-B744-2EB1AE5198B7}\msconfig.exe (0)
2021-01-21 19:51:39Z
  Microsoft.AutoGenerated.{19EC9782-4EDE-C19F-08F2-3A612CECFE68} (0)
2021-01-21 19:50:33Z
  {1AC14E77-02E7-4E5D-B744-2EB1AE5198B7}\quickassist.exe (0)
2021-01-14 01:17:07Z
  Microsoft.WindowsStore_8wekyb3d8bbwe!App (0)
2021-01-09 02:43:23Z
  C:\Users\Humberto\Downloads\Archivo 0008 SD\Microsoft Office 2007 Portable.exe (0)
2021-01-09 02:36:58Z
  Microsoft.InternetExplorer.Default (0)
2021-01-09 02:27:16Z
  Microsoft.AutoGenerated.{1D009F25-25D2-48E6-50C2-7E005E1583E7} (0)
2020-12-23 06:54:13Z
  C:\Users\Humberto\Downloads\CONTROL VELOCIDAD INTERNET\CONTROL VELOCIDAD INTERNET\Selfishnet win 7\Selfishnet win 7\SelfishNetv0.2-beta_vista.exe (0)
2020-12-23 06:54:06Z
  C:\Users\Humberto\Downloads\CONTROL VELOCIDAD INTERNET\CONTROL VELOCIDAD INTERNET\WinPcap_4_1_3.exe (0)
2020-12-17 04:59:37Z
  Microsoft.Getstarted_8wekyb3d8bbwe!App (0)
  Microsoft.WindowsFeedbackHub_8wekyb3d8bbwe!App (0)
  Microsoft.WindowsMaps_8wekyb3d8bbwe!App (0)
  Microsoft.People_8wekyb3d8bbwe!x4c7a3b7dy2188y46d4ya362y19ac5a5805e5x (0)
  Microsoft.MicrosoftStickyNotes_8wekyb3d8bbwe!App (0)
  {1AC14E77-02E7-4E5D-B744-2EB1AE5198B7}\SnippingTool.exe (0)

Value names with no time stamps:
  UEME_CTLCUACount:ctor
  Microsoft.AccountsControl_cw5n1h2txyewy!App
  Microsoft.Windows.Search_cw5n1h2txyewy!CortanaUI
  Microsoft.AAD.BrokerPlugin_cw5n1h2txyewy!App
  Microsoft.Windows.CloudExperienceHost_cw5n1h2txyewy!App
  Microsoft.Windows.StartMenuExperienceHost_cw5n1h2txyewy!App
  Microsoft.Windows.ShellExperienceHost_cw5n1h2txyewy!App
  {1AC14E77-02E7-4E5D-B744-2EB1AE5198B7}\dfrgui.exe
  {1AC14E77-02E7-4E5D-B744-2EB1AE5198B7}\diskmgmt.msc
  Microsoft.AutoGenerated.{39F3B85B-63FB-0256-8A0A-AAC177410D28}
  C:\Users\Humberto\Downloads\winrar-x64-600es.exe
  {1AC14E77-02E7-4E5D-B744-2EB1AE5198B7}\Fondue.exe
  {1AC14E77-02E7-4E5D-B744-2EB1AE5198B7}\OptionalFeatures.exe
  C:\Users\Humberto\Downloads\SteamSetup.exe
  Valve.Steam.Client
  Microsoft.Windows.WindowsInstaller
  {7C5A40EF-A0FB-4BFC-874A-C0F2E0B9FA8E}\Steam\steamapps\common\Left 4 Dead 2\left4dead2.exe
  Microsoft.LockApp_cw5n1h2txyewy!WindowsDefaultLockScreen
  {1AC14E77-02E7-4E5D-B744-2EB1AE5198B7}\EaseOfAccessDialog.exe
  {1AC14E77-02E7-4E5D-B744-2EB1AE5198B7}\OpenWith.exe
  C:\Users\Humberto\AppData\Local\Temp\{FAB72825-F002-49A3-B6AD-C16E0AD3879A}\.cr\python-3.9.1-amd64.exe
  C:\Users\Humberto\Downloads\Archivo 0008 SD\Office2007Portable\App\Office2007\WINWORD.EXE
  {1AC14E77-02E7-4E5D-B744-2EB1AE5198B7}\GfxUI.exe
  {1AC14E77-02E7-4E5D-B744-2EB1AE5198B7}\fsquirt.exe
  Microsoft.GetHelp_8wekyb3d8bbwe!App
  C:\Users\Humberto\Downloads\microsoft office\Office2007Portable\App\Office2007\WINWORD.EXE
  D:\Office\Setup32.exe
  {6D809377-6AF0-444B-8957-A3773F02200E}\Common Files\microsoft shared\ClickToRun\OfficeC2RClient.exe
  GitForWindows.Bash
  {6D809377-6AF0-444B-8957-A3773F02200E}\Git\mingw64\libexec\git-core\GitHub.UI.exe
  C:\Users\Humberto\AppData\Local\SquirrelTemp\Update.exe
  C:\Users\Humberto\AppData\Local\Temp\{C303787F-CA34-4DE8-978B-B0D492A79917}\.cr\python-3.9.2-amd64.exe
  C:\Users\Humberto\AppData\Local\Temp\{A2D6A4DF-29D0-476C-BE02-0EA91F5A7D3D}\.cr\python-3.9.2-amd64.exe
  Microsoft.DesktopAppInstaller_8wekyb3d8bbwe!PythonRedirector
  C:\Users\Humberto\AppData\Local\Temp\{9100F6E9-1338-4BC7-82C7-F925CA8CFF2A}\.cr\python-3.9.1-amd64.exe
  C:\Users\Humberto\AppData\Local\Temp\{1B25BA9B-C3D1-44ED-8204-87202CDF91CB}\.cr\python-3.9.1-amd64.exe
  C:\Users\Humberto\AppData\Local\Temp\{B4BD7620-51A0-4996-A17B-30B19B7E804A}\.cr\python-3.9.2-amd64.exe
  C:\Users\Humberto\AppData\Local\Temp\{3F68AF79-DB70-4612-8EAA-99F6A8A02D18}\.cr\python-3.9.2-amd64.exe
  C:\Users\Humberto\AppData\Local\Temp\{53987328-DC0C-475C-8C95-F36ABC7C5D89}\.cr\python-3.9.2-amd64.exe
  C:\Users\Humberto\AppData\Local\Temp\{76C0BF23-EFC4-412B-9D1B-74AF6E055B40}\.cr\python-3.9.2-amd64.exe
  {F38BF404-1D43-42F2-9305-67DE0B28FC23}\Temp\{54869217-8936-4FA6-9C4E-788839DFBF76}\.cr\python-3.9.2-amd64.exe
  {1AC14E77-02E7-4E5D-B744-2EB1AE5198B7}\SndVol.exe
  {7C5A40EF-A0FB-4BFC-874A-C0F2E0B9FA8E}\Epic Games\Launcher\Portal\Binaries\Win64\EpicGamesLauncher.exe
  Microsoft.SkyDrive.Desktop
  C:\Users\Humberto\AppData\Local\Temp\nsoB372.tmp\npcap-1.00.exe

{F2A1CB5A-E3CC-4A2E-AF9D-505A7009D442}

Value names with no time stamps:

{F4E57C4B-2036-45F0-A9AB-443BCFE33D9F}
2021-05-01 03:19:34Z
  {9E3995AB-1F9C-4F13-B827-48B24B6C7174}\TaskBar\File Explorer.lnk (16)
2021-05-01 02:26:59Z
  C:\Users\Humberto\Desktop\Microsoft Teams.lnk (6)
2021-04-28 23:11:27Z
  {9E3995AB-1F9C-4F13-B827-48B24B6C7174}\TaskBar\Microsoft Edge.lnk (9)
2021-04-25 05:28:03Z
  C:\Users\Humberto\Desktop\Discord.lnk (2)
2021-04-23 22:09:24Z
  C:\Users\Humberto\Desktop\Word.lnk (1)
2021-04-23 20:57:53Z
  {0139D44E-6AFE-49F2-8690-3DAFCAE6FFB8}\Git\Git Bash.lnk (6)
2021-04-23 20:27:58Z
  C:\Users\Humberto\Desktop\WhatsApp.lnk (2)
2021-04-23 20:18:15Z
  {A77F5D77-2E2B-44C3-A6A2-ABA601054A51}\System Tools\Command Prompt.lnk (4)
2021-04-23 08:11:46Z
  C:\Users\Humberto\Desktop\IDLE (Python 3.9 64-bit).lnk (2)
2021-04-23 07:19:46Z
  C:\Users\Humberto\Desktop\Nmap - Zenmap GUI.lnk (1)
2021-04-22 06:52:46Z
  C:\Users\Humberto\Desktop\Fortnite en GeForce NOW.lnk (2)
2021-04-19 04:57:28Z
  {A77F5D77-2E2B-44C3-A6A2-ABA601054A51}\Python 3.9\IDLE (Python 3.9 64-bit).lnk (0)
2021-04-15 22:29:11Z
  {0139D44E-6AFE-49F2-8690-3DAFCAE6FFB8}\Accessories\Notepad.lnk (0)
2021-04-05 03:05:54Z
  {0139D44E-6AFE-49F2-8690-3DAFCAE6FFB8}\Accessories\Paint.lnk (0)
2021-04-03 04:56:56Z
  {A77F5D77-2E2B-44C3-A6A2-ABA601054A51}\Python 3.9\Python 3.9 Manuals (64-bit).lnk (0)
2021-03-30 08:06:41Z
  C:\Users\Public\Desktop\Epic Games Launcher.lnk (0)
2021-03-30 08:04:03Z
  C:\Users\Public\Desktop\Steam.lnk (0)
2021-03-20 04:10:30Z
  {0139D44E-6AFE-49F2-8690-3DAFCAE6FFB8}\Windows PowerShell\Windows PowerShell ISE.lnk (0)
2021-03-17 08:40:05Z
  {A77F5D77-2E2B-44C3-A6A2-ABA601054A51}\System Tools\Control Panel.lnk (0)
2021-02-25 16:49:09Z
  C:\Users\Humberto\Desktop\NVIDIA GeForce NOW.lnk (0)
2021-02-22 17:35:57Z
  {0139D44E-6AFE-49F2-8690-3DAFCAE6FFB8}\Git\Git CMD.lnk (0)
2021-02-22 15:52:04Z
  C:\Users\Humberto\Desktop\PowerPoint.lnk (0)
2021-02-14 10:03:34Z
  {0139D44E-6AFE-49F2-8690-3DAFCAE6FFB8}\PowerPoint.lnk (0)
2021-02-14 09:45:46Z
  {0139D44E-6AFE-49F2-8690-3DAFCAE6FFB8}\Word.lnk (0)
2021-02-13 07:30:31Z
  {A77F5D77-2E2B-44C3-A6A2-ABA601054A51}\NVIDIA GeForce NOW.lnk (0)
2021-02-03 00:56:38Z
  {0139D44E-6AFE-49F2-8690-3DAFCAE6FFB8}\Administrative Tools\System Configuration.lnk (0)
2021-01-21 19:51:39Z
  {0139D44E-6AFE-49F2-8690-3DAFCAE6FFB8}\Administrative Tools\Task Scheduler.lnk (0)
2021-01-21 19:50:33Z
  {0139D44E-6AFE-49F2-8690-3DAFCAE6FFB8}\Accessories\Quick Assist.lnk (0)
2021-01-09 02:27:16Z
  {A77F5D77-2E2B-44C3-A6A2-ABA601054A51}\Python 3.9\Python 3.9 Module Docs (64-bit).lnk (0)
2020-12-17 04:59:37Z
  {0139D44E-6AFE-49F2-8690-3DAFCAE6FFB8}\Accessories\Snipping Tool.lnk (0)

Value names with no time stamps:
  UEME_CTLCUACount:ctor

{FA99DFC7-6AC2-453A-A5E2-5E2AFF4507BD}

Value names with no time stamps:

----------------------------------------
wc_shares v.20200515
- Gets contents of user's WorkgroupCrawler/Shares subkeys

Software\Microsoft\Windows\CurrentVersion\Explorer\WorkgroupCrawler\Shares not found.
----------------------------------------
winrar v.20200526
(NTUSER.DAT) Get WinRAR\ArcHistory entries

WinRAR
Software\WinRAR\ArcHistory
LastWrite Time 2021-05-01 04:21:18Z

0 -> C:\Users\Humberto\Downloads\rr_2.02.zip
1 -> C:\Users\Humberto\Downloads\RegistryExplorer_RECmd.zip
2 -> C:\Users\Humberto\Downloads\Mind-Map-Templates-Widescreen.zip
3 -> C:\Users\Humberto\Downloads\Ofice 2019 Joalgoba.rar
----------------------------------------
winscp v.20201227
(NTUSER.DAT) Gets user's WinSCP 2 data

Software\Martin Prikryl\WinSCP 2 not found.
----------------------------------------
winzip v.20200526
(NTUSER.DAT) Get WinZip extract and filemenu values

Software\Nico Mak Computing\WinZip not found.
----------------------------------------
wordwheelquery v.20200823
(NTUSER.DAT) Gets contents of user's WordWheelQuery key

Software\Microsoft\Windows\CurrentVersion\Explorer\WordWheelQuery not found.
----------------------------------------
